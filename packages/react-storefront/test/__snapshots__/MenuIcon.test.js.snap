// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuIcon should accept custom icons 1`] = `
<WithStyles(MenuIcon) OpenIcon={[Function: ShouldUpdate]} CloseIcon={[Function: ShouldUpdate]}>
  <MenuIcon OpenIcon={[Function: ShouldUpdate]} CloseIcon={[Function: ShouldUpdate]} classes={{...}} open={false} label={true}>
    <div className="RSFMenuIcon-root-1">
      <TransitionGroup component="div" childFactory={[Function: childFactory]}>
        <div>
          <CSSTransition classNames="rsf-menu-icon" timeout={300} onExited={[Function: bound bound handleExited]} in={true} appear={[undefined]} enter={[undefined]} exit={[undefined]}>
            <Transition timeout={300} onExited={[Function]} in={true} appear={false} enter={true} exit={true} onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} mountOnEnter={false} unmountOnExit={false}>
              <WithStyles(SvgIcon) className="RSFMenuIcon-icon-2">
                <SvgIcon className="RSFMenuIcon-icon-2" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                  <svg className="MuiSvgIcon-root-3 RSFMenuIcon-icon-2" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                    <pure(AddIcon)>
                      <AddIcon>
                        <WithStyles(SvgIcon)>
                          <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                            <svg className="MuiSvgIcon-root-3" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                              <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
                              <path fill="none" d="M0 0h24v24H0z" />
                            </svg>
                          </SvgIcon>
                        </WithStyles(SvgIcon)>
                      </AddIcon>
                    </pure(AddIcon)>
                  </svg>
                </SvgIcon>
              </WithStyles(SvgIcon)>
            </Transition>
          </CSSTransition>
        </div>
      </TransitionGroup>
    </div>
  </MenuIcon>
</WithStyles(MenuIcon)>
`;

exports[`MenuIcon should show the close icon when opened 1`] = `
<WithStyles(MenuIcon) open={true}>
  <MenuIcon open={true} classes={{...}} label={true} CloseIcon={[Function: ShouldUpdate]}>
    <div className="RSFMenuIcon-root-1">
      <TransitionGroup component="div" childFactory={[Function: childFactory]}>
        <div>
          <CSSTransition classNames="rsf-menu-icon" timeout={300} onExited={[Function: bound bound handleExited]} in={true} appear={[undefined]} enter={[undefined]} exit={[undefined]}>
            <Transition timeout={300} onExited={[Function]} in={true} appear={false} enter={true} exit={true} onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} mountOnEnter={false} unmountOnExit={false}>
              <WithStyles(SvgIcon) className="RSFMenuIcon-icon-2">
                <SvgIcon className="RSFMenuIcon-icon-2" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                  <svg className="MuiSvgIcon-root-3 RSFMenuIcon-icon-2" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                    <pure(CloseIcon)>
                      <CloseIcon>
                        <WithStyles(SvgIcon)>
                          <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                            <svg className="MuiSvgIcon-root-3" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                              <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                              <path fill="none" d="M0 0h24v24H0z" />
                            </svg>
                          </SvgIcon>
                        </WithStyles(SvgIcon)>
                      </CloseIcon>
                    </pure(CloseIcon)>
                  </svg>
                </SvgIcon>
              </WithStyles(SvgIcon)>
            </Transition>
          </CSSTransition>
        </div>
      </TransitionGroup>
    </div>
  </MenuIcon>
</WithStyles(MenuIcon)>
`;

exports[`MenuIcon should show the open icon when closed 1`] = `
<WithStyles(MenuIcon)>
  <MenuIcon classes={{...}} open={false} label={true} CloseIcon={[Function: ShouldUpdate]}>
    <div className="RSFMenuIcon-root-1">
      <TransitionGroup component="div" childFactory={[Function: childFactory]}>
        <div>
          <CSSTransition classNames="rsf-menu-icon" timeout={300} onExited={[Function: bound bound handleExited]} in={true} appear={[undefined]} enter={[undefined]} exit={[undefined]}>
            <Transition timeout={300} onExited={[Function]} in={true} appear={false} enter={true} exit={true} onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} mountOnEnter={false} unmountOnExit={false}>
              <WithStyles(SvgIcon) className="RSFMenuIcon-icon-2">
                <SvgIcon className="RSFMenuIcon-icon-2" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                  <svg className="MuiSvgIcon-root-3 RSFMenuIcon-icon-2" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                    <OpenWithLabel>
                      <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 31.7 31.7">
                        <path id="Shape" d="M0.9,17.7h29.8v-2.8H0.9V17.7L0.9,17.7z M0.9,10.8h29.8V8.1H0.9V10.8L0.9,10.8z M0.9,1.2v2.8h29.8V1.2H0.9 L0.9,1.2z" />
                        <path id="menu" d="M0.4,24h1.1v1h0c0-0.1,0.1-0.2,0.2-0.3c0.1-0.1,0.3-0.3,0.4-0.4c0.2-0.1,0.4-0.2,0.6-0.3s0.5-0.1,0.8-0.1 c0.5,0,0.9,0.1,1.2,0.3c0.3,0.2,0.6,0.5,0.8,0.9c0.2-0.4,0.5-0.7,0.9-0.9s0.7-0.3,1.1-0.3c0.5,0,0.9,0.1,1.2,0.2 c0.3,0.2,0.6,0.4,0.7,0.6c0.2,0.3,0.3,0.6,0.4,0.9c0.1,0.3,0.1,0.7,0.1,1v3.7H8.7v-3.5c0-0.2,0-0.5,0-0.7c0-0.2-0.1-0.4-0.2-0.6 c-0.1-0.2-0.2-0.3-0.4-0.4S7.6,25,7.3,25c-0.6,0-1,0.2-1.2,0.5s-0.4,0.8-0.4,1.4v3.4H4.5v-3.3c0-0.3,0-0.6,0-0.8 c0-0.2-0.1-0.5-0.2-0.6c-0.1-0.2-0.2-0.3-0.4-0.4C3.7,25.1,3.5,25,3.2,25c-0.2,0-0.4,0-0.6,0.1c-0.2,0.1-0.4,0.2-0.5,0.4 c-0.2,0.2-0.3,0.4-0.4,0.6c-0.1,0.3-0.1,0.6-0.1,0.9v3.3H0.4V24z M12.3,27.6c0,0.3,0.1,0.5,0.2,0.8c0.1,0.2,0.3,0.4,0.5,0.6 c0.2,0.2,0.4,0.3,0.7,0.4c0.3,0.1,0.5,0.1,0.8,0.1c0.4,0,0.7-0.1,1-0.3s0.5-0.4,0.8-0.7l0.9,0.7c-0.7,0.9-1.6,1.3-2.8,1.3 c-0.5,0-0.9-0.1-1.3-0.3c-0.4-0.2-0.7-0.4-1-0.7c-0.3-0.3-0.5-0.6-0.6-1c-0.2-0.4-0.2-0.8-0.2-1.3c0-0.5,0.1-0.9,0.2-1.3 c0.2-0.4,0.4-0.8,0.7-1c0.3-0.3,0.6-0.5,1-0.7c0.4-0.2,0.8-0.3,1.3-0.3c0.6,0,1,0.1,1.4,0.3c0.4,0.2,0.7,0.4,1,0.8 c0.2,0.3,0.4,0.7,0.5,1.1c0.1,0.4,0.2,0.8,0.2,1.2v0.4H12.3z M16.1,26.7c0-0.3-0.1-0.5-0.1-0.7c-0.1-0.2-0.2-0.4-0.3-0.6 c-0.2-0.2-0.3-0.3-0.6-0.4c-0.2-0.1-0.5-0.1-0.8-0.1c-0.3,0-0.6,0.1-0.8,0.2c-0.2,0.1-0.4,0.3-0.6,0.4s-0.3,0.4-0.4,0.6 c-0.1,0.2-0.1,0.4-0.1,0.6H16.1z M18.6,24h1.2v1h0c0.2-0.3,0.4-0.6,0.8-0.8c0.4-0.2,0.8-0.3,1.3-0.3c0.3,0,0.6,0,0.9,0.1 c0.3,0.1,0.5,0.2,0.7,0.4c0.2,0.2,0.4,0.4,0.5,0.8c0.1,0.3,0.2,0.7,0.2,1.1v4.1H23v-3.7c0-0.3,0-0.5-0.1-0.8 c-0.1-0.2-0.2-0.4-0.3-0.5c-0.1-0.1-0.3-0.2-0.5-0.3C21.9,25,21.7,25,21.5,25c-0.2,0-0.5,0-0.7,0.1c-0.2,0.1-0.4,0.2-0.6,0.4 s-0.3,0.4-0.4,0.7c-0.1,0.3-0.1,0.6-0.1,0.9v3.2h-1.2V24z M31.3,30.3h-1.2v-1h0c-0.2,0.3-0.4,0.6-0.8,0.8c-0.4,0.2-0.8,0.3-1.3,0.3 c-0.3,0-0.6,0-0.9-0.1c-0.3-0.1-0.5-0.2-0.7-0.4c-0.2-0.2-0.4-0.4-0.5-0.8c-0.1-0.3-0.2-0.7-0.2-1.1V24h1.2v3.7c0,0.3,0,0.5,0.1,0.8 c0.1,0.2,0.2,0.4,0.3,0.5c0.1,0.1,0.3,0.2,0.5,0.3s0.4,0.1,0.5,0.1c0.2,0,0.5,0,0.7-0.1c0.2-0.1,0.4-0.2,0.6-0.4 c0.2-0.2,0.3-0.4,0.4-0.7s0.1-0.6,0.1-0.9V24h1.2V30.3z" />
                      </svg>
                    </OpenWithLabel>
                  </svg>
                </SvgIcon>
              </WithStyles(SvgIcon)>
            </Transition>
          </CSSTransition>
        </div>
      </TransitionGroup>
    </div>
  </MenuIcon>
</WithStyles(MenuIcon)>
`;
