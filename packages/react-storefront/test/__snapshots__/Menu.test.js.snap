// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-703 MuiDrawer-modal-714" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-703 MuiDrawer-modal-714" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-715 MuiDrawer-root-703 MuiDrawer-modal-714 MuiModal-hidden-716">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-717" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-705 RSFMenu-drawer-688 MuiDrawer-paperAnchorLeft-706" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-705 RSFMenu-drawer-688 MuiDrawer-paperAnchorLeft-706" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-719 MuiPaper-elevation16-737 MuiDrawer-paper-705 RSFMenu-drawer-688 MuiDrawer-paperAnchorLeft-706" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-746 MuiList-padding-747 RSFMenu-list-689" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false}>
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-755">
                                                                <ButtonBase className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-755" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-764 MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-767">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-698">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-698" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-773 RSFMenu-listItemIcon-698">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-692">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-692">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-692">
                                                                                <SvgIcon className="RSFMenu-icon-692" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-774 RSFMenu-icon-692" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-788" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-788" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-783" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-785">
                                                              <div className="MuiCollapse-wrapperInner-786">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-746 RSFMenu-list-689 MuiList-padding-747" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false}>
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-755">
                                                                                    <ButtonBase className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-755" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-764 MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-expander-699 MuiMenuItem-gutters-751" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-767">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-698">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-698" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-773 RSFMenu-listItemIcon-698">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-692">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-692">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-692">
                                                                                                    <SvgIcon className="RSFMenu-icon-692" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-774 RSFMenu-icon-692" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-788" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-788" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-783" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-785">
                                                                                  <div className="MuiCollapse-wrapperInner-786">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-746 RSFMenu-list-689 MuiList-padding-747" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-787 RSFMenu-link-696" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" divider={true} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false}>
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-755">
                                                                                                                <ButtonBase className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-755" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-764 MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-767">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-788" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-788" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-696" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-787 RSFMenu-link-696" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" divider={true} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false}>
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-755">
                                                                        <ButtonBase className="MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-755" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-764 MuiListItem-root-753 MuiListItem-default-756 MuiListItem-gutters-760 MuiListItem-divider-759 MuiListItem-button-761 MuiMenuItem-root-750 RSFMenu-listItem-695 RSFMenu-leaf-700 MuiMenuItem-gutters-751" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                <div className="MuiListItemText-root-767">
                                                                                  Leaf
                                                                                </div>
                                                                              </ListItemText>
                                                                            </WithStyles(ListItemText)>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-788" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-788" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-123 MuiDrawer-modal-134" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-123 MuiDrawer-modal-134" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-135 MuiDrawer-root-123 MuiDrawer-modal-134 MuiModal-hidden-136">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-137" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-125 RSFMenu-drawer-108 MuiDrawer-paperAnchorLeft-126" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-125 RSFMenu-drawer-108 MuiDrawer-paperAnchorLeft-126" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-139 MuiPaper-elevation16-157 MuiDrawer-paper-125 RSFMenu-drawer-108 MuiDrawer-paperAnchorLeft-126" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-114" style={{...}}>
                                              <MenuList style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-166 RSFMenu-list-109 MuiList-padding-167" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-170 RSFMenu-listItem-115 MuiMenuItem-gutters-171" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-170 RSFMenu-listItem-115 MuiMenuItem-gutters-171" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-173 MuiListItem-default-176 MuiListItem-gutters-180 MuiListItem-divider-179 MuiListItem-button-181 MuiMenuItem-root-170 RSFMenu-listItem-115 MuiMenuItem-gutters-171" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-175">
                                                                  <ButtonBase className="MuiListItem-root-173 MuiListItem-default-176 MuiListItem-gutters-180 MuiListItem-divider-179 MuiListItem-button-181 MuiMenuItem-root-170 RSFMenu-listItem-115 MuiMenuItem-gutters-171" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-175" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-184 MuiListItem-root-173 MuiListItem-default-176 MuiListItem-gutters-180 MuiListItem-divider-179 MuiListItem-button-181 MuiMenuItem-root-170 RSFMenu-listItem-115 MuiMenuItem-gutters-171" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-187">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-118">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-118" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-193 RSFMenu-listItemIcon-118">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-112">
                                                                              <ChevronRightIcon className="RSFMenu-icon-112">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-112">
                                                                                  <SvgIcon className="RSFMenu-icon-112" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-194 RSFMenu-icon-112" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-203" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-203" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-225 MuiDrawer-modal-236" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-225 MuiDrawer-modal-236" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-237 MuiDrawer-root-225 MuiDrawer-modal-236 MuiModal-hidden-238">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-239" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-227 RSFMenu-drawer-210 MuiDrawer-paperAnchorLeft-228" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-227 RSFMenu-drawer-210 MuiDrawer-paperAnchorLeft-228" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-241 MuiPaper-elevation16-259 MuiDrawer-paper-227 RSFMenu-drawer-210 MuiDrawer-paperAnchorLeft-228" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-216" style={{...}}>
                                              <MenuList style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-268 RSFMenu-list-211 MuiList-padding-269" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-272 RSFMenu-listItem-217 MuiMenuItem-gutters-273" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-272 RSFMenu-listItem-217 MuiMenuItem-gutters-273" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-275 MuiListItem-default-278 MuiListItem-gutters-282 MuiListItem-divider-281 MuiListItem-button-283 MuiMenuItem-root-272 RSFMenu-listItem-217 MuiMenuItem-gutters-273" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-277">
                                                                  <ButtonBase className="MuiListItem-root-275 MuiListItem-default-278 MuiListItem-gutters-282 MuiListItem-divider-281 MuiListItem-button-283 MuiMenuItem-root-272 RSFMenu-listItem-217 MuiMenuItem-gutters-273" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-277" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-286 MuiListItem-root-275 MuiListItem-default-278 MuiListItem-gutters-282 MuiListItem-divider-281 MuiListItem-button-283 MuiMenuItem-root-272 RSFMenu-listItem-217 MuiMenuItem-gutters-273" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-289">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-220">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-220" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-295 RSFMenu-listItemIcon-220">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-214">
                                                                              <ChevronRightIcon className="RSFMenu-icon-214">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-214">
                                                                                  <SvgIcon className="RSFMenu-icon-214" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-296 RSFMenu-icon-214" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-305" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-305" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-16 MuiDrawer-modal-27" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-16 MuiDrawer-modal-27" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-28 MuiDrawer-root-16 MuiDrawer-modal-27 MuiModal-hidden-29">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-30" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-32 MuiPaper-elevation16-50 MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-59 MuiList-padding-60 RSFMenu-list-2" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false}>
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-77 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-80">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-86 RSFMenu-listItemIcon-11">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-87 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-101" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-101" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-96" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-98">
                                                              <div className="MuiCollapse-wrapperInner-99">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-59 RSFMenu-list-2 MuiList-padding-60" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false}>
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                                    <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-77 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-80">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-86 RSFMenu-listItemIcon-11">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                                    <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-87 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-101" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-101" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-96" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-98">
                                                                                  <div className="MuiCollapse-wrapperInner-99">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-59 RSFMenu-list-2 MuiList-padding-60" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-100 RSFMenu-link-9" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" divider={true} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false}>
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                                                                <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-77 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-73 MuiListItem-divider-72 MuiListItem-button-74 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-80">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-101" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-101" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-566 MuiDrawer-modal-577" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-566 MuiDrawer-modal-577" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-578 MuiDrawer-root-566 MuiDrawer-modal-577 MuiModal-hidden-579">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-580" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={true} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-568 RSFMenu-drawer-551 MuiDrawer-paperAnchorLeft-569" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-568 RSFMenu-drawer-551 MuiDrawer-paperAnchorLeft-569" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-582 MuiPaper-elevation16-600 MuiDrawer-paper-568 RSFMenu-drawer-551 MuiDrawer-paperAnchorLeft-569" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-557" style={{...}}>
                                              <MenuList style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-609 RSFMenu-list-552 MuiList-padding-610" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618">
                                                                  <ButtonBase className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-627 MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-630">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-561">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-561" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-636 RSFMenu-listItemIcon-561">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-555">
                                                                              <ChevronRightIcon className="RSFMenu-icon-555">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-555">
                                                                                  <SvgIcon className="RSFMenu-icon-555" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-637 RSFMenu-icon-555" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-646" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-646" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                              <MenuList style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-609 RSFMenu-list-552 MuiList-padding-610" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-613 MuiMenuItem-gutters-614" divider={true} onClick={[Function]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-613 MuiMenuItem-gutters-614" divider={true} onClick={[Function]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618">
                                                                  <ButtonBase className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-627 MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 MuiMenuItem-gutters-614" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function]}>
                                                                      <WithStyles(ListItemIcon) classes={{...}}>
                                                                        <ListItemIcon classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-636 RSFMenu-header-554">
                                                                            <pure(ChevronLeftIcon) className="RSFMenu-icon-555">
                                                                              <ChevronLeftIcon className="RSFMenu-icon-555">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-555">
                                                                                  <SvgIcon className="RSFMenu-icon-555" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-637 RSFMenu-icon-555" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronLeftIcon>
                                                                            </pure(ChevronLeftIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                        <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                          <div className="MuiListItemText-root-630 RSFMenu-headerText-556">
                                                                            <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-633" component="span">
                                                                              <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-633" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                                <span className="MuiTypography-root-653 MuiTypography-subtitle1-671 MuiListItemText-primary-633">
                                                                                  <div className="RSFMenu-headerText-556">
                                                                                    Group 1
                                                                                     
                                                                                  </div>
                                                                                </span>
                                                                              </Typography>
                                                                            </WithStyles(Typography)>
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-646" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-646" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618">
                                                                  <ButtonBase className="MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-618" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-627 MuiListItem-root-616 MuiListItem-default-619 MuiListItem-gutters-623 MuiListItem-divider-622 MuiListItem-button-624 MuiMenuItem-root-613 RSFMenu-listItem-558 MuiMenuItem-gutters-614" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                        <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-630">
                                                                            Item 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-561">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-561" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-636 RSFMenu-listItemIcon-561">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-555">
                                                                              <ChevronRightIcon className="RSFMenu-icon-555">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-555">
                                                                                  <SvgIcon className="RSFMenu-icon-555" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-637 RSFMenu-icon-555" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-646" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-646" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} anchor="left" elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-327 MuiDrawer-modal-338" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-327 MuiDrawer-modal-338" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="MuiModal-root-339 MuiDrawer-root-327 MuiDrawer-modal-338 MuiModal-hidden-340">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-341" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-329 RSFMenu-drawer-312 MuiDrawer-paperAnchorLeft-330" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-329 RSFMenu-drawer-312 MuiDrawer-paperAnchorLeft-330" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-343 MuiPaper-elevation16-361 MuiDrawer-paper-329 RSFMenu-drawer-312 MuiDrawer-paperAnchorLeft-330" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-318" style={{...}}>
                                              <MenuList style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-370 RSFMenu-list-313 MuiList-padding-371" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-374 RSFMenu-listItem-319 MuiMenuItem-gutters-375" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-374 RSFMenu-listItem-319 MuiMenuItem-gutters-375" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false}>
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-377 MuiListItem-default-380 MuiListItem-gutters-384 MuiListItem-divider-383 MuiListItem-button-385 MuiMenuItem-root-374 RSFMenu-listItem-319 MuiMenuItem-gutters-375" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-379">
                                                                  <ButtonBase className="MuiListItem-root-377 MuiListItem-default-380 MuiListItem-gutters-384 MuiListItem-divider-383 MuiListItem-button-385 MuiMenuItem-root-374 RSFMenu-listItem-319 MuiMenuItem-gutters-375" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-379" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-388 MuiListItem-root-377 MuiListItem-default-380 MuiListItem-gutters-384 MuiListItem-divider-383 MuiListItem-button-385 MuiMenuItem-root-374 RSFMenu-listItem-319 MuiMenuItem-gutters-375" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-391">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-322">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-322" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-397 RSFMenu-listItemIcon-322">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-316">
                                                                              <ChevronRightIcon className="RSFMenu-icon-316">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-316">
                                                                                  <SvgIcon className="RSFMenu-icon-316" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-398 RSFMenu-icon-316" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-407" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-407" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;
