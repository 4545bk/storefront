// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer accepts a className prop 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-Drawer) className="myClassName" onRequestClose={[Function]}>
        <inject-Drawer className="myClassName" onRequestClose={[Function]} classes={{...}}>
          <Drawer className="myClassName" onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={[undefined]} variant={[undefined]} className="myClassName">
              <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" className="myClassName" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-7 MuiDrawer-modal-18 myClassName" open={false} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-7 MuiDrawer-modal-18 myClassName" open={false} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Drawer accepts a paper class 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-Drawer) classes={{...}} onRequestClose={[Function]}>
        <inject-Drawer onRequestClose={[Function]} classes={{...}}>
          <Drawer onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={[undefined]} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-27 MuiDrawer-modal-38" open={false} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-27 MuiDrawer-modal-38" open={false} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Drawer sets up amp-bind when ampBindClosed is set 1`] = `
<TestProvider app={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-AmpState id="myState">
        <AmpState id="myState" amp={true} initialState={{...}}>
          <Provider ampStateId="myState">
            <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
              <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <amp-state id="myState">
              <script type="application/json" dangerouslySetInnerHTML={{...}} />
            </amp-state>
            <WithStyles(inject-Drawer) ampBindClosed="closed" onRequestClose={[Function]}>
              <inject-Drawer ampBindClosed="closed" onRequestClose={[Function]} classes={{...}}>
                <Drawer ampBindClosed="closed" onRequestClose={[Function]} classes={{...}} amp={true} ampStateId="myState" showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-270\\' : null" open={[undefined]} variant={[undefined]}>
                    <Drawer anchor="bottom" amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-270\\' : null" open={false} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-271 MuiDrawer-modal-282" open={false} onClose={[undefined]} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-270\\' : null">
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-271 MuiDrawer-modal-282" open={false} onClose={[undefined]} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-270\\' : null" classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </Provider>
        </AmpState>
      </inject-AmpState>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Drawer spreads props to the underlying MuiDrawer 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-Drawer) open={true} onRequestClose={[Function]}>
        <inject-Drawer open={true} onRequestClose={[Function]} classes={{...}}>
          <Drawer open={true} onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={true} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={true} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-177 MuiDrawer-modal-188" open={true} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-177 MuiDrawer-modal-188" open={true} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}}>
                    <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                      <Portal containerInfo={{...}}>
                        <div className="mui-fixed MuiModal-root-189 MuiDrawer-root-177 MuiDrawer-modal-188" amp-bind={{...}}>
                          <WithStyles(Backdrop) open={true} onClick={[Function]} transitionDuration={{...}}>
                            <Backdrop open={true} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                              <WithTheme(Fade) in={true} timeout={{...}} onClick={[Function]}>
                                <Fade theme={{...}} in={true} timeout={{...}} onClick={[Function]}>
                                  <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                    <div className="MuiBackdrop-root-191" aria-hidden="true" style={{...}} onClick={[Function]} />
                                  </Transition>
                                </Fade>
                              </WithTheme(Fade)>
                            </Backdrop>
                          </WithStyles(Backdrop)>
                          <RootRef rootRef={[Function]}>
                            <WithTheme(Slide) in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                              <Slide theme={{...}} in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <EventListener target="window" onResize={[Function: debounced]}>
                                  <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={true} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                    <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-179 RSFDrawer-paper-174 MuiDrawer-paperAnchorBottom-183" style={{...}} role="document" tabIndex="-1">
                                      <Paper elevation={16} square={true} className="MuiDrawer-paper-179 RSFDrawer-paper-174 MuiDrawer-paperAnchorBottom-183" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                        <div className="MuiPaper-root-193 MuiPaper-elevation16-211 MuiDrawer-paper-179 RSFDrawer-paper-174 MuiDrawer-paperAnchorBottom-183" style={{...}} role="document" tabIndex="-1">
                                          <div className="RSFDrawer-container-172">
                                            <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-171" onClick={[Function]} style={{...}} on={{...}}>
                                              <Button variant="fab" color="primary" className="RSFDrawer-closeButton-171" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                <WithStyles(ButtonBase) className="MuiButton-root-220 MuiButton-fab-237 MuiButton-contained-231 MuiButton-containedPrimary-232 MuiButton-raised-234 MuiButton-raisedPrimary-235 RSFDrawer-closeButton-171" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-239" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                  <ButtonBase className="MuiButton-root-220 MuiButton-fab-237 MuiButton-contained-231 MuiButton-containedPrimary-232 MuiButton-raised-234 MuiButton-raisedPrimary-235 RSFDrawer-closeButton-171" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-239" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                    <button className="MuiButtonBase-root-246 MuiButton-root-220 MuiButton-fab-237 MuiButton-contained-231 MuiButton-containedPrimary-232 MuiButton-raised-234 MuiButton-raisedPrimary-235 RSFDrawer-closeButton-171" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                      <span className="MuiButton-label-221">
                                                        <pure(CloseIcon)>
                                                          <CloseIcon>
                                                            <WithStyles(SvgIcon)>
                                                              <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                <svg className="MuiSvgIcon-root-249" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                  <path fill="none" d="M0 0h24v24H0z" />
                                                                </svg>
                                                              </SvgIcon>
                                                            </WithStyles(SvgIcon)>
                                                          </CloseIcon>
                                                        </pure(CloseIcon)>
                                                      </span>
                                                      <NoSsr defer={false} fallback={{...}}>
                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                          <TouchRipple center={false} classes={{...}}>
                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-258" childFactory={[Function: childFactory]}>
                                                              <span className="MuiTouchRipple-root-258" />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </Button>
                                            </WithStyles(Button)>
                                            <div className="RSFDrawer-content-173" />
                                          </div>
                                        </div>
                                      </Paper>
                                    </WithStyles(Paper)>
                                  </Transition>
                                </EventListener>
                              </Slide>
                            </WithTheme(Slide)>
                          </RootRef>
                        </div>
                      </Portal>
                    </Portal>
                  </Modal>
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Drawer uses a div for title 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-Drawer) open={true} title="Title" onRequestClose={[Function]}>
        <inject-Drawer open={true} title="Title" onRequestClose={[Function]} classes={{...}}>
          <Drawer open={true} title="Title" onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={true} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={true} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-47 MuiDrawer-modal-58" open={true} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-47 MuiDrawer-modal-58" open={true} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}}>
                    <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                      <Portal containerInfo={{...}}>
                        <div className="mui-fixed MuiModal-root-59 MuiDrawer-root-47 MuiDrawer-modal-58" amp-bind={{...}}>
                          <WithStyles(Backdrop) open={true} onClick={[Function]} transitionDuration={{...}}>
                            <Backdrop open={true} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                              <WithTheme(Fade) in={true} timeout={{...}} onClick={[Function]}>
                                <Fade theme={{...}} in={true} timeout={{...}} onClick={[Function]}>
                                  <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                    <div className="MuiBackdrop-root-61" aria-hidden="true" style={{...}} onClick={[Function]} />
                                  </Transition>
                                </Fade>
                              </WithTheme(Fade)>
                            </Backdrop>
                          </WithStyles(Backdrop)>
                          <RootRef rootRef={[Function]}>
                            <WithTheme(Slide) in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                              <Slide theme={{...}} in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <EventListener target="window" onResize={[Function: debounced]}>
                                  <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={true} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                    <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-49 RSFDrawer-paper-44 MuiDrawer-paperAnchorBottom-53" style={{...}} role="document" tabIndex="-1">
                                      <Paper elevation={16} square={true} className="MuiDrawer-paper-49 RSFDrawer-paper-44 MuiDrawer-paperAnchorBottom-53" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                        <div className="MuiPaper-root-63 MuiPaper-elevation16-81 MuiDrawer-paper-49 RSFDrawer-paper-44 MuiDrawer-paperAnchorBottom-53" style={{...}} role="document" tabIndex="-1">
                                          <div className="RSFDrawer-container-42">
                                            <WithStyles(Typography) className="RSFDrawer-title-45" variant="h6" component="div">
                                              <Typography className="RSFDrawer-title-45" variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                <div className="MuiTypography-root-90 MuiTypography-h6-107 RSFDrawer-title-45">
                                                  Title
                                                </div>
                                              </Typography>
                                            </WithStyles(Typography)>
                                            <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-41" onClick={[Function]} style={{...}} on={{...}}>
                                              <Button variant="fab" color="primary" className="RSFDrawer-closeButton-41" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                <WithStyles(ButtonBase) className="MuiButton-root-126 MuiButton-fab-143 MuiButton-contained-137 MuiButton-containedPrimary-138 MuiButton-raised-140 MuiButton-raisedPrimary-141 RSFDrawer-closeButton-41" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-145" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                  <ButtonBase className="MuiButton-root-126 MuiButton-fab-143 MuiButton-contained-137 MuiButton-containedPrimary-138 MuiButton-raised-140 MuiButton-raisedPrimary-141 RSFDrawer-closeButton-41" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-145" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                    <button className="MuiButtonBase-root-152 MuiButton-root-126 MuiButton-fab-143 MuiButton-contained-137 MuiButton-containedPrimary-138 MuiButton-raised-140 MuiButton-raisedPrimary-141 RSFDrawer-closeButton-41" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                      <span className="MuiButton-label-127">
                                                        <pure(CloseIcon)>
                                                          <CloseIcon>
                                                            <WithStyles(SvgIcon)>
                                                              <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                <svg className="MuiSvgIcon-root-155" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                  <path fill="none" d="M0 0h24v24H0z" />
                                                                </svg>
                                                              </SvgIcon>
                                                            </WithStyles(SvgIcon)>
                                                          </CloseIcon>
                                                        </pure(CloseIcon)>
                                                      </span>
                                                      <NoSsr defer={false} fallback={{...}}>
                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                          <TouchRipple center={false} classes={{...}}>
                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-164" childFactory={[Function: childFactory]}>
                                                              <span className="MuiTouchRipple-root-164" />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </Button>
                                            </WithStyles(Button)>
                                            <div className="RSFDrawer-content-43" />
                                          </div>
                                        </div>
                                      </Paper>
                                    </WithStyles(Paper)>
                                  </Transition>
                                </EventListener>
                              </Slide>
                            </WithTheme(Slide)>
                          </RootRef>
                        </div>
                      </Portal>
                    </Portal>
                  </Modal>
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
