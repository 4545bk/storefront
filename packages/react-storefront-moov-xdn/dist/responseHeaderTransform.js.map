{"version":3,"sources":["../src/responseHeaderTransform.js"],"names":["responseHeaderTransform","cacheProxiedAssets","serverMaxAge","ONE_DAY","env","__static_origin_path__","headers","header","path","startsWith","browserMaxAge","FAR_FUTURE","split","pathname","secure","addSecureHeaders","SET_COOKIE","addHeader","__webpack_hash__","response","MOOV_PWA_RESPONSE","statusCode","statusText","cache","name","cookies","cookie","redirectTo","removeAllHeaders"],"mappings":";;;;;;;AAIA;;AACA;;;;;;;;;;AAEA;;;AAGe,SAASA,uBAAT,GAEP;AAAA,iFAAJ,EAAI;AAAA,mCADNC,kBACM;AAAA,MADNA,kBACM,sCADa;AAAEC,IAAAA,YAAY,EAAEC;AAAhB,GACb;;AAEN,MAAIC,GAAG,CAACC,sBAAR,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,MAAR,CAAe,qBAAf,EAAsC,QAAtC,EAD8B,CAG9B;AACA;;AACA,QAAIH,GAAG,CAACI,IAAJ,CAASC,UAAT,CAAoB,oBAApB,CAAJ,EAA+C;AAC7C;AACA,wBAAM;AAAEC,QAAAA,aAAa,EAAE,CAAjB;AAAoBR,QAAAA,YAAY,EAAES;AAAlC,OAAN;AACD,KAHD,MAGO,IAAIP,GAAG,CAACI,IAAJ,CAASC,UAAT,CAAoB,MAApB,CAAJ,EAAiC;AACtC,wBAAM;AAAEC,QAAAA,aAAa,EAAEC,iBAAjB;AAA6BT,QAAAA,YAAY,EAAES;AAA3C,OAAN;AACD,KAFM,MAEA;AACL,wBAAM;AAAET,QAAAA,YAAY,EAAES;AAAhB,OAAN;AACD;AACF,GAbD,MAaO;AAAA,0BACcP,GAAG,CAACI,IAAJ,CAASI,KAAT,CAAe,IAAf,CADd;AAAA;AAAA,QACEC,QADF;;AAGL,mCAAqBA,QAArB,EAA+BZ,kBAA/B,EAHK,CAKL;;AAEA,QAAIG,GAAG,CAACU,MAAJ,KAAe,MAAnB,EAA2B;AACzB,aAAO,gCAAP;AACD;;AAEDC,IAAAA,gBAAgB,GAXX,CAaL;;AAEA,QAAIX,GAAG,CAACY,UAAR,EAAoB;AAClBV,MAAAA,OAAO,CAACW,SAAR,CAAkB,YAAlB,EAAgCb,GAAG,CAACY,UAApC;AACD;;AAEDV,IAAAA,OAAO,CAACW,SAAR,CAAkB,oBAAlB,EAAwCC,gBAAxC,EAnBK,CAqBL;;AAEA,QAAIC,QAAQ,GAAGf,GAAG,CAACgB,iBAAnB;;AAEA,QAAID,QAAJ,EAAc;AACZb,MAAAA,OAAO,CAACe,UAAR,GAAqBF,QAAQ,CAACE,UAA9B;;AAEA,UAAIF,QAAQ,CAACG,UAAb,EAAyB;AACvBhB,QAAAA,OAAO,CAACgB,UAAR,GAAqBH,QAAQ,CAACG,UAA9B;AACD,OALW,CAOZ;;;AACA,UAAIH,QAAQ,CAACI,KAAb,EAAoB;AAClB,0BAAMJ,QAAQ,CAACI,KAAf;AACD,OAVW,CAYZ;;;AACA,WAAK,IAAIC,IAAT,IAAiBL,QAAQ,CAACb,OAA1B,EAAmC;AACjCA,QAAAA,OAAO,CAACW,SAAR,CAAkBO,IAAlB,EAAwBL,QAAQ,CAACb,OAAT,CAAiBkB,IAAjB,CAAxB;AACD,OAfW,CAiBZ;;;AAjBY;AAAA;AAAA;;AAAA;AAkBZ,6BAAmBL,QAAQ,CAACM,OAA5B,8HAAqC;AAAA,cAA5BC,MAA4B;AACnCpB,UAAAA,OAAO,CAACW,SAAR,CAAkB,YAAlB,EAAgCS,MAAhC;AACD,SApBW,CAsBZ;;AAtBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBZ,UAAIP,QAAQ,CAACQ,UAAb,EAAyB;AACvB,kCAAWR,QAAQ,CAACQ,UAApB,EAAgCrB,OAAO,CAACe,UAAxC;AACD;AACF;AACF,GAnEK,CAqEN;;;AACA,MAAIf,OAAO,CAACe,UAAR,IAAsB,GAAtB,IAA6Bf,OAAO,CAACe,UAAR,KAAuB,GAAxD,EAA6D;AAC3Df,IAAAA,OAAO,CAACsB,gBAAR,CAAyB,eAAzB;AACD,GAxEK,CA0EN;AACA;;;AACA,MAAItB,OAAO,CAACC,MAAR,CAAe,cAAf,CAAJ,EAAoC;AAClCD,IAAAA,OAAO,CAACsB,gBAAR,CAAyB,YAAzB;AACD;AAEF;;AAED,SAASb,gBAAT,GAA4B;AAC1B;AACAT,EAAAA,OAAO,CAACC,MAAR,CAAe,iBAAf,EAAkC,YAAlC;AACAD,EAAAA,OAAO,CAACC,MAAR,CAAe,iBAAf,EAAkC,4BAAlC;AACD","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\nimport { cache, cacheProxiedAssets as doCacheProxiedAssets, FAR_FUTURE, ONE_DAY } from './cache'\nimport { redirectTo, redirectToHttps } from './redirect'\n\n/**\n * Run this in moov_response_header_transform.js\n */\nexport default function responseHeaderTransform({ \n  cacheProxiedAssets={ serverMaxAge: ONE_DAY } \n} = {}) {\n\n  if (env.__static_origin_path__) {\n    headers.header('x-rsf-response-type', 'static')\n    \n    // It is important that the client never caches the servce-worker so that it always goes to the network\n    // to check for a new one.\n    if (env.path.startsWith('/service-worker.js')) {\n      // far future cache the service worker on the server\n      cache({ browserMaxAge: 0, serverMaxAge: FAR_FUTURE })\n    } else if (env.path.startsWith('/pwa')) {\n      cache({ browserMaxAge: FAR_FUTURE, serverMaxAge: FAR_FUTURE })\n    } else {\n      cache({ serverMaxAge: FAR_FUTURE })\n    }\n  } else {\n    const [pathname] = env.path.split(/\\?/)\n\n    doCacheProxiedAssets(pathname, cacheProxiedAssets)\n\n    // Always redirect on non-secure requests.\n\n    if (env.secure !== 'true') {\n      return redirectToHttps()   \n    }\n\n    addSecureHeaders()\n\n    // This gives us a mechanism to set cookies on adapt pages\n\n    if (env.SET_COOKIE) {\n      headers.addHeader(\"set-cookie\", env.SET_COOKIE)\n    }\n\n    headers.addHeader('x-moov-api-version', __webpack_hash__)\n\n    // set headers and status from Response object\n\n    let response = env.MOOV_PWA_RESPONSE\n\n    if (response) {\n      headers.statusCode = response.statusCode\n      \n      if (response.statusText) {\n        headers.statusText = response.statusText\n      }\n\n      // set by cache route handlers\n      if (response.cache) {\n        cache(response.cache)\n      }\n\n      // send headers\n      for (let name in response.headers) {\n        headers.addHeader(name, response.headers[name])\n      }\n\n      // set cookies\n      for (let cookie of response.cookies) {\n        headers.addHeader('set-cookie', cookie)\n      }\n      \n      // handle redirects\n      if (response.redirectTo) {\n        redirectTo(response.redirectTo, headers.statusCode)\n      }\n    }\n  }\n\n  // never cache responses with an error status or temporary redirect\n  if (headers.statusCode >= 400 || headers.statusCode === 302) {\n    headers.removeAllHeaders('cache-control')\n  }\n\n  // Never send a set-cookie header when x-moov-cache is set to true.  \n  // Doing so would prevent caching as varnish will not cache a response with a set-cookie header.\n  if (headers.header('x-moov-cache')) {\n    headers.removeAllHeaders('set-cookie')\n  }\n\n}\n\nfunction addSecureHeaders() {\n  // prevents clickjacking, also known as a \"UI redress attack\"\n  headers.header('X-Frame-Options', 'SAMEORIGIN')\n  headers.header('Referrer-Policy', 'no-referrer-when-downgrade')\n}"],"file":"responseHeaderTransform.js"}