// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer accepts a className prop 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithStyles(inject-Drawer) className="myClassName" onRequestClose={[Function]}>
        <inject-Drawer className="myClassName" onRequestClose={[Function]} classes={{...}}>
          <Drawer className="myClassName" onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={[undefined]} variant={[undefined]} className="myClassName">
              <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" className="myClassName" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-5 MuiDrawer-modal-16 myClassName" open={false} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-5 MuiDrawer-modal-16 myClassName" open={false} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Drawer accepts a paper class 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithStyles(inject-Drawer) classes={{...}} onRequestClose={[Function]}>
        <inject-Drawer onRequestClose={[Function]} classes={{...}}>
          <Drawer onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={[undefined]} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-23 MuiDrawer-modal-34" open={false} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-23 MuiDrawer-modal-34" open={false} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Drawer sets up amp-bind when ampBindClosed is set 1`] = `
<TestProvider app={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <inject-AmpState id="myState">
        <AmpState id="myState" amp={true} initialState={{...}}>
          <Provider ampStateId="myState">
            <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
              <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <amp-state id="myState">
              <script type="application/json" dangerouslySetInnerHTML={{...}} />
            </amp-state>
            <WithStyles(inject-Drawer) ampBindClosed="closed" onRequestClose={[Function]}>
              <inject-Drawer ampBindClosed="closed" onRequestClose={[Function]} classes={{...}}>
                <Drawer ampBindClosed="closed" onRequestClose={[Function]} classes={{...}} amp={true} ampStateId="myState" showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-259\\' : null" open={[undefined]} variant={[undefined]}>
                    <Drawer anchor="bottom" amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-259\\' : null" open={false} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-260 MuiDrawer-modal-271" open={false} onClose={[undefined]} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-259\\' : null">
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-260 MuiDrawer-modal-271" open={false} onClose={[undefined]} amp-bind="class=>myState.closed ? \\'RSFDrawer-ampClosed-259\\' : null" classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </Provider>
        </AmpState>
      </inject-AmpState>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Drawer spreads props to the underlying MuiDrawer 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithStyles(inject-Drawer) open={true} onRequestClose={[Function]}>
        <inject-Drawer open={true} onRequestClose={[Function]} classes={{...}}>
          <Drawer open={true} onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={true} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={true} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-168 MuiDrawer-modal-179" open={true} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-168 MuiDrawer-modal-179" open={true} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}}>
                    <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                      <Portal containerInfo={{...}}>
                        <div className="MuiModal-root-180 MuiDrawer-root-168 MuiDrawer-modal-179" amp-bind={{...}}>
                          <WithStyles(Backdrop) open={true} onClick={[Function]} transitionDuration={{...}}>
                            <Backdrop open={true} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                              <WithTheme(Fade) in={true} timeout={{...}} onClick={[Function]}>
                                <Fade theme={{...}} in={true} timeout={{...}} onClick={[Function]}>
                                  <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                    <div className="MuiBackdrop-root-182" aria-hidden="true" style={{...}} onClick={[Function]} />
                                  </Transition>
                                </Fade>
                              </WithTheme(Fade)>
                            </Backdrop>
                          </WithStyles(Backdrop)>
                          <RootRef rootRef={[Function]}>
                            <WithTheme(Slide) in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                              <Slide theme={{...}} in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <EventListener target="window" onResize={[Function: debounced]}>
                                  <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={true} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                    <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-170 RSFDrawer-paper-165 MuiDrawer-paperAnchorBottom-174" style={{...}} direction="up" role="document" tabIndex="-1">
                                      <Paper elevation={16} square={true} className="MuiDrawer-paper-170 RSFDrawer-paper-165 MuiDrawer-paperAnchorBottom-174" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                        <div className="MuiPaper-root-184 MuiPaper-elevation16-202 MuiDrawer-paper-170 RSFDrawer-paper-165 MuiDrawer-paperAnchorBottom-174" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <div>
                                            <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-164" onClick={[Function]} style={{...}} on={{...}}>
                                              <Button variant="fab" color="primary" className="RSFDrawer-closeButton-164" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                <WithStyles(ButtonBase) className="MuiButton-root-211 MuiButton-fab-228 MuiButton-contained-222 MuiButton-containedPrimary-223 MuiButton-raised-225 MuiButton-raisedPrimary-226 RSFDrawer-closeButton-164" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-230" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                  <ButtonBase className="MuiButton-root-211 MuiButton-fab-228 MuiButton-contained-222 MuiButton-containedPrimary-223 MuiButton-raised-225 MuiButton-raisedPrimary-226 RSFDrawer-closeButton-164" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-230" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                    <button className="MuiButtonBase-root-237 MuiButton-root-211 MuiButton-fab-228 MuiButton-contained-222 MuiButton-containedPrimary-223 MuiButton-raised-225 MuiButton-raisedPrimary-226 RSFDrawer-closeButton-164" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                      <span className="MuiButton-label-212">
                                                        <pure(CloseIcon)>
                                                          <CloseIcon>
                                                            <WithStyles(SvgIcon)>
                                                              <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                <svg className="MuiSvgIcon-root-240" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                  <path fill="none" d="M0 0h24v24H0z" />
                                                                </svg>
                                                              </SvgIcon>
                                                            </WithStyles(SvgIcon)>
                                                          </CloseIcon>
                                                        </pure(CloseIcon)>
                                                      </span>
                                                      <NoSsr defer={false} fallback={{...}}>
                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                          <TouchRipple center={false} classes={{...}}>
                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-249" childFactory={[Function: childFactory]}>
                                                              <span className="MuiTouchRipple-root-249" />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </Button>
                                            </WithStyles(Button)>
                                          </div>
                                        </div>
                                      </Paper>
                                    </WithStyles(Paper)>
                                  </Transition>
                                </EventListener>
                              </Slide>
                            </WithTheme(Slide)>
                          </RootRef>
                        </div>
                      </Portal>
                    </Portal>
                  </Modal>
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`Drawer uses a div for title 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <WithStyles(inject-Drawer) open={true} title="Title" onRequestClose={[Function]}>
        <inject-Drawer open={true} title="Title" onRequestClose={[Function]} classes={{...}}>
          <Drawer open={true} title="Title" onRequestClose={[Function]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
            <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={true} variant={[undefined]}>
              <Drawer anchor="bottom" amp-bind={{...}} open={true} variant="temporary" theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-41 MuiDrawer-modal-52" open={true} onClose={[undefined]} amp-bind={{...}}>
                  <Modal BackdropProps={{...}} className="MuiDrawer-root-41 MuiDrawer-modal-52" open={true} onClose={[undefined]} amp-bind={{...}} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}}>
                    <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                      <Portal containerInfo={{...}}>
                        <div className="MuiModal-root-53 MuiDrawer-root-41 MuiDrawer-modal-52" amp-bind={{...}}>
                          <WithStyles(Backdrop) open={true} onClick={[Function]} transitionDuration={{...}}>
                            <Backdrop open={true} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                              <WithTheme(Fade) in={true} timeout={{...}} onClick={[Function]}>
                                <Fade theme={{...}} in={true} timeout={{...}} onClick={[Function]}>
                                  <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                    <div className="MuiBackdrop-root-55" aria-hidden="true" style={{...}} onClick={[Function]} />
                                  </Transition>
                                </Fade>
                              </WithTheme(Fade)>
                            </Backdrop>
                          </WithStyles(Backdrop)>
                          <RootRef rootRef={[Function]}>
                            <WithTheme(Slide) in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                              <Slide theme={{...}} in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <EventListener target="window" onResize={[Function: debounced]}>
                                  <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={true} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                    <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-43 RSFDrawer-paper-38 MuiDrawer-paperAnchorBottom-47" style={{...}} direction="up" role="document" tabIndex="-1">
                                      <Paper elevation={16} square={true} className="MuiDrawer-paper-43 RSFDrawer-paper-38 MuiDrawer-paperAnchorBottom-47" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                        <div className="MuiPaper-root-57 MuiPaper-elevation16-75 MuiDrawer-paper-43 RSFDrawer-paper-38 MuiDrawer-paperAnchorBottom-47" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <div>
                                            <div className="RSFDrawer-title-39">
                                              <WithStyles(Typography) variant="h6" component="div">
                                                <Typography variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                  <div className="MuiTypography-root-84 MuiTypography-h6-101">
                                                    Title
                                                  </div>
                                                </Typography>
                                              </WithStyles(Typography)>
                                            </div>
                                            <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-37" onClick={[Function]} style={{...}} on={{...}}>
                                              <Button variant="fab" color="primary" className="RSFDrawer-closeButton-37" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                <WithStyles(ButtonBase) className="MuiButton-root-119 MuiButton-fab-136 MuiButton-contained-130 MuiButton-containedPrimary-131 MuiButton-raised-133 MuiButton-raisedPrimary-134 RSFDrawer-closeButton-37" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-138" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                  <ButtonBase className="MuiButton-root-119 MuiButton-fab-136 MuiButton-contained-130 MuiButton-containedPrimary-131 MuiButton-raised-133 MuiButton-raisedPrimary-134 RSFDrawer-closeButton-37" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-138" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                    <button className="MuiButtonBase-root-145 MuiButton-root-119 MuiButton-fab-136 MuiButton-contained-130 MuiButton-containedPrimary-131 MuiButton-raised-133 MuiButton-raisedPrimary-134 RSFDrawer-closeButton-37" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                      <span className="MuiButton-label-120">
                                                        <pure(CloseIcon)>
                                                          <CloseIcon>
                                                            <WithStyles(SvgIcon)>
                                                              <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                <svg className="MuiSvgIcon-root-148" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                  <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                  <path fill="none" d="M0 0h24v24H0z" />
                                                                </svg>
                                                              </SvgIcon>
                                                            </WithStyles(SvgIcon)>
                                                          </CloseIcon>
                                                        </pure(CloseIcon)>
                                                      </span>
                                                      <NoSsr defer={false} fallback={{...}}>
                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                          <TouchRipple center={false} classes={{...}}>
                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-157" childFactory={[Function: childFactory]}>
                                                              <span className="MuiTouchRipple-root-157" />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </Button>
                                            </WithStyles(Button)>
                                          </div>
                                        </div>
                                      </Paper>
                                    </WithStyles(Paper)>
                                  </Transition>
                                </EventListener>
                              </Slide>
                            </WithTheme(Slide)>
                          </RootRef>
                        </div>
                      </Portal>
                    </Portal>
                  </Modal>
                </WithStyles(Modal)>
              </Drawer>
            </WithStyles(Drawer)>
          </Drawer>
        </inject-Drawer>
      </WithStyles(inject-Drawer)>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;
