// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarButton should render additional children inside the button 1`] = `
<WithStyles(ToolbarButton) icon={{...}} label="menu">
  <ToolbarButton classes={{...}} icon={{...}} label="menu">
    <WithStyles(IconButton) classes={{...}}>
      <IconButton classes={{...}} color="default" disabled={false}>
        <WithStyles(ButtonBase) className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false}>
          <ButtonBase classes={{...}} className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false} disableRipple={false} tabIndex="0" type="button">
            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-8 MuiIconButton-root-2" type="button" disabled={false}>
              <span className="MuiIconButton-label-7">
                <div className="RSFToolbarButton-wrap-1">
                  <div>
                    icon here
                  </div>
                  <div>
                    menu
                  </div>
                </div>
                <div>
                  additional child
                </div>
              </span>
              <WithStyles(TouchRipple) innerRef={[Function: value]} center={true}>
                <TouchRipple classes={{...}} center={true}>
                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-11" childFactory={[Function: childFactory]}>
                    <span className="MuiTouchRipple-root-11" />
                  </TransitionGroup>
                </TouchRipple>
              </WithStyles(TouchRipple)>
            </button>
          </ButtonBase>
        </WithStyles(ButtonBase)>
      </IconButton>
    </WithStyles(IconButton)>
  </ToolbarButton>
</WithStyles(ToolbarButton)>
`;

exports[`ToolbarButton should render icon and button 1`] = `
<WithStyles(ToolbarButton) icon={{...}} label="menu">
  <ToolbarButton classes={{...}} icon={{...}} label="menu">
    <WithStyles(IconButton) classes={{...}}>
      <IconButton classes={{...}} color="default" disabled={false}>
        <WithStyles(ButtonBase) className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false}>
          <ButtonBase classes={{...}} className="MuiIconButton-root-2" centerRipple={true} focusRipple={true} disabled={false} disableRipple={false} tabIndex="0" type="button">
            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-8 MuiIconButton-root-2" type="button" disabled={false}>
              <span className="MuiIconButton-label-7">
                <div className="RSFToolbarButton-wrap-1">
                  <div>
                    icon here
                  </div>
                  <div>
                    menu
                  </div>
                </div>
              </span>
              <WithStyles(TouchRipple) innerRef={[Function: value]} center={true}>
                <TouchRipple classes={{...}} center={true}>
                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-11" childFactory={[Function: childFactory]}>
                    <span className="MuiTouchRipple-root-11" />
                  </TransitionGroup>
                </TouchRipple>
              </WithStyles(TouchRipple)>
            </button>
          </ButtonBase>
        </WithStyles(ButtonBase)>
      </IconButton>
    </WithStyles(IconButton)>
  </ToolbarButton>
</WithStyles(ToolbarButton)>
`;
