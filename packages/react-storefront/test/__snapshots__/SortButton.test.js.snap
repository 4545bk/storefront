// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SortButton passes drawerProps to the underlying Sort component 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}} drawerProps={{...}}>
        <SortButton title="Sort By" model={{...}} drawerProps={{...}} app={{...}} variant="drawer">
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-233 MuiButton-contained-244 MuiButton-raised-247 RSFActionButton-raised-229" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-252" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-233 MuiButton-contained-244 MuiButton-raised-247 RSFActionButton-raised-229" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-252" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-259 MuiButton-root-233 MuiButton-contained-244 MuiButton-raised-247 RSFActionButton-raised-229" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-234 RSFActionButton-label-230">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-231">
                            <Typography variant="button" className="RSFActionButton-caption-231" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-262 MuiTypography-button-273 RSFActionButton-caption-231">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-232">
                            <Typography variant="caption" className="RSFActionButton-value-232" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-262 MuiTypography-caption-272 RSFActionButton-value-232">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-298" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-298" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with a sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" variant="drawer" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-81 MuiButton-contained-92 MuiButton-raised-95 RSFActionButton-raised-77" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-100" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-81 MuiButton-contained-92 MuiButton-raised-95 RSFActionButton-raised-77" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-100" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-107 MuiButton-root-81 MuiButton-contained-92 MuiButton-raised-95 RSFActionButton-raised-77" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-82 RSFActionButton-label-78">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-79">
                            <Typography variant="button" className="RSFActionButton-caption-79" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-110 MuiTypography-button-121 RSFActionButton-caption-79">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-80">
                            <Typography variant="caption" className="RSFActionButton-value-80" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-110 MuiTypography-caption-120 RSFActionButton-value-80">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-146" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-146" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with no sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" variant="drawer" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value={[undefined]} onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value={[undefined]} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-6 RSFActionButton-label-2">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-3">
                            <Typography variant="button" className="RSFActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-button-45 RSFActionButton-caption-3">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-4">
                            <Typography variant="caption" className="RSFActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-caption-44 RSFActionButton-value-4" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-70" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-70" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`SortButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}}>
        <SortButton title="Sort By" model={{...}} app={{...}} variant="drawer" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-157 MuiButton-contained-168 MuiButton-raised-171 RSFActionButton-raised-153" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-176" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-157 MuiButton-contained-168 MuiButton-raised-171 RSFActionButton-raised-153" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-176" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-183 MuiButton-root-157 MuiButton-contained-168 MuiButton-raised-171 RSFActionButton-raised-153" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-158 RSFActionButton-label-154">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-155">
                            <Typography variant="button" className="RSFActionButton-caption-155" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-186 MuiTypography-button-197 RSFActionButton-caption-155">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-156">
                            <Typography variant="caption" className="RSFActionButton-value-156" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-186 MuiTypography-caption-196 RSFActionButton-value-156">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-222" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-222" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
