{"version":3,"sources":["../src/index.js"],"names":["useMoovAsyncTransformer","responseRewriter","theme","model","App","router","blob","env","secure","sendResponse","htmlparsed","__static_origin_path__","fns","export","Config","load","request","Request","response","Response","Server","serve"],"mappings":";;;;;;;AAKA;;AACA;;AACA;;AACA;;;;AARA;;;;AAUAA,uBAAuB;AAEvB;;;;;;;;;;AASe,SAASC,gBAAT,OAA+D;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,GAAqB,QAArBA,GAAqB;AAAA,MAAhBC,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAE5E,MAAIC,GAAG,CAACC,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA,WAAOC,YAAY,CAAC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAD,CAAnB;AACD,GAHD,MAGO,IAAIH,GAAG,CAACI,sBAAR,EAAgC;AACrC;AACAC,IAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoB,MAApB;AACAD,IAAAA,GAAG,CAACC,MAAJ,CAAW,YAAX,EAAyB,YAAzB,EAHqC,CAGE;;AACvC,WAAOJ,YAAY,CAAC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAD,CAAnB;AACD,GALM,MAKA;AACL;AACAI,oBAAOC,IAAP,CAAYT,IAAZ;;AACA,QAAMU,OAAO,GAAG,IAAIC,gBAAJ,EAAhB;AACA,QAAMC,QAAQ,GAAG,IAAIC,iBAAJ,CAAaH,OAAb,CAAjB;AACA,QAAII,eAAJ,CAAW;AAAElB,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,KAAK,EAALA,KAAT;AAAgBC,MAAAA,GAAG,EAAHA,GAAhB;AAAqBC,MAAAA,MAAM,EAANA;AAArB,KAAX,EAA0CgB,KAA1C,CAAgDL,OAAhD,EAAyDE,QAAzD;AACD;AAEF","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\n\nimport Server from 'react-storefront/Server'\nimport Config from 'react-storefront/Config'\nimport Request from './Request'\nimport Response from './Response'\n\nuseMoovAsyncTransformer()\n\n/**\n * Provides the default functionality for scripts/index.js\n * @param {Object} options\n * @param {Object} theme The material-ui theme\n * @param {Class} model A mobx-state-tree model class that extends AppModelBase \n * @param {React.Component} App The app react component\n * @param {Router} router An instance of react-storefront/router\n * @param {String} blob The blob \n */\nexport default function responseRewriter({ theme, model, App, router, blob }) {\n\n  if (env.secure !== 'true') {\n    // Always redirect on non-secure requests.\n    return sendResponse({ htmlparsed: false })\n  } else if (env.__static_origin_path__) {\n    // static assets\n    fns.export('Cache', 'true')\n    fns.export('Cache-Time', '2903040000') // static paths use hash-based cache-busting, so we far-future cache them in varnish and the browser\n    return sendResponse({ htmlparsed: false })\n  } else {\n    // render the page\n    Config.load(blob)\n    const request = new Request()\n    const response = new Response(request)\n    new Server({ theme, model, App, router }).serve(request, response)\n  }\n\n}\n"],"file":"index.js"}