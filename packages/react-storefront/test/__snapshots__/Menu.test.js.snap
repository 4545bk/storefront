// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-711 MuiDrawer-modal-722" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-711 MuiDrawer-modal-722" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-723 MuiDrawer-root-711 MuiDrawer-modal-722 MuiModal-hidden-724">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-725" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-713 RSFMenu-drawer-696 MuiDrawer-paperAnchorLeft-714" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-713 RSFMenu-drawer-696 MuiDrawer-paperAnchorLeft-714" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-727 MuiPaper-elevation16-745 MuiDrawer-paper-713 RSFMenu-drawer-696 MuiDrawer-paperAnchorLeft-714" style={{...}} role="document" tabIndex="-1">
                                            <MenuList classes={{...}} disableListWrap={false}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-754 MuiList-padding-755 RSFMenu-list-697" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-763">
                                                                <ButtonBase className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-763" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-773 MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-776">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-706">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-706" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-782 RSFMenu-listItemIcon-706">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-700">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-700">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-700">
                                                                                <SvgIcon className="RSFMenu-icon-700" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-783 RSFMenu-icon-700" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-797" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-797" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-792" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-794">
                                                              <div className="MuiCollapse-wrapperInner-795">
                                                                <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-754 RSFMenu-list-697 MuiList-padding-755" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-763">
                                                                                    <ButtonBase className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-763" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-773 MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-expander-707 MuiMenuItem-gutters-759" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-776">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-706">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-706" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-782 RSFMenu-listItemIcon-706">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-700">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-700">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-700">
                                                                                                    <SvgIcon className="RSFMenu-icon-700" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-783 RSFMenu-icon-700" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-797" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-797" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-792" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-794">
                                                                                  <div className="MuiCollapse-wrapperInner-795">
                                                                                    <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-754 RSFMenu-list-697 MuiList-padding-755" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-796 RSFMenu-link-704" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-763">
                                                                                                                <ButtonBase className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-763" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-773 MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-776">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-797" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-797" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-704" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-796 RSFMenu-link-704" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-763">
                                                                        <ButtonBase className="MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-763" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-773 MuiListItem-root-761 MuiListItem-default-764 MuiListItem-gutters-769 MuiListItem-divider-768 MuiListItem-button-770 MuiMenuItem-root-758 RSFMenu-listItem-703 RSFMenu-leaf-708 MuiMenuItem-gutters-759" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                              <ListItemText primary="Leaf" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                <div className="MuiListItemText-root-776">
                                                                                  Leaf
                                                                                </div>
                                                                              </ListItemText>
                                                                            </WithStyles(ListItemText)>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-797" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-797" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-819 MuiDrawer-modal-830" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-819 MuiDrawer-modal-830" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-831 MuiDrawer-root-819 MuiDrawer-modal-830 MuiModal-hidden-832">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-833" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-821 RSFMenu-drawer-804 MuiDrawer-paperAnchorLeft-822" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-821 RSFMenu-drawer-804 MuiDrawer-paperAnchorLeft-822" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-835 MuiPaper-elevation16-853 MuiDrawer-paper-821 RSFMenu-drawer-804 MuiDrawer-paperAnchorLeft-822" style={{...}} role="document" tabIndex="-1">
                                            <MenuList classes={{...}} disableListWrap={false}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-862 MuiList-padding-863 RSFMenu-list-805" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-871">
                                                                <ButtonBase className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-871" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-881 MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-884">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-814">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-814" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-890 RSFMenu-listItemIcon-814">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-808">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-808">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-808">
                                                                                <SvgIcon className="RSFMenu-icon-808" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-891 RSFMenu-icon-808" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-905" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-905" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-900" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-902">
                                                              <div className="MuiCollapse-wrapperInner-903">
                                                                <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-862 RSFMenu-list-805 MuiList-padding-863" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-871">
                                                                                    <ButtonBase className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-871" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-881 MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-expander-815 MuiMenuItem-gutters-867" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-884">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-814">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-814" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-890 RSFMenu-listItemIcon-814">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-808">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-808">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-808">
                                                                                                    <SvgIcon className="RSFMenu-icon-808" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-891 RSFMenu-icon-808" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-905" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-905" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-900" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-902">
                                                                                  <div className="MuiCollapse-wrapperInner-903">
                                                                                    <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-862 RSFMenu-list-805 MuiList-padding-863" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-904 RSFMenu-link-812" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-871">
                                                                                                                <ButtonBase className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-871" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-881 MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-884">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-905" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-905" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-812" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-904 RSFMenu-link-812" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-871">
                                                                        <ButtonBase className="MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-871" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-881 MuiListItem-root-869 MuiListItem-default-872 MuiListItem-gutters-877 MuiListItem-divider-876 MuiListItem-button-878 MuiMenuItem-root-866 RSFMenu-listItem-811 RSFMenu-leaf-816 MuiMenuItem-gutters-867" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                              <ListItemText primary="Leaf" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                <div className="MuiListItemText-root-884">
                                                                                  Leaf
                                                                                </div>
                                                                              </ListItemText>
                                                                            </WithStyles(ListItemText)>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-905" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-905" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: renderer]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: renderer]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-927 MuiDrawer-modal-938" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-927 MuiDrawer-modal-938" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-939 MuiDrawer-root-927 MuiDrawer-modal-938 MuiModal-hidden-940">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-941" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-929 RSFMenu-drawer-912 MuiDrawer-paperAnchorLeft-930" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-929 RSFMenu-drawer-912 MuiDrawer-paperAnchorLeft-930" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-943 MuiPaper-elevation16-961 MuiDrawer-paper-929 RSFMenu-drawer-912 MuiDrawer-paperAnchorLeft-930" style={{...}} role="document" tabIndex="-1">
                                            <MenuList classes={{...}} disableListWrap={false}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-970 MuiList-padding-971 RSFMenu-list-913" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-979">
                                                                <ButtonBase className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-979" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-989 MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <div>
                                                                      Group 1
                                                                    </div>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-997" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-997" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-992" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-994">
                                                              <div className="MuiCollapse-wrapperInner-995">
                                                                <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-970 RSFMenu-list-913 MuiList-padding-971" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-979">
                                                                                    <ButtonBase className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-979" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-989 MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-expander-923 MuiMenuItem-gutters-975" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <div>
                                                                                          Item 1
                                                                                        </div>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-997" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-997" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-992" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-994">
                                                                                  <div className="MuiCollapse-wrapperInner-995">
                                                                                    <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-970 RSFMenu-list-913 MuiList-padding-971" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-996 RSFMenu-link-920" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-979">
                                                                                                                <ButtonBase className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-979" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-989 MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <div>
                                                                                                                      Child 1
                                                                                                                    </div>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-997" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-997" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-920" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-996 RSFMenu-link-920" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-979">
                                                                        <ButtonBase className="MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-979" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-989 MuiListItem-root-977 MuiListItem-default-980 MuiListItem-gutters-985 MuiListItem-divider-984 MuiListItem-button-986 MuiMenuItem-root-974 RSFMenu-listItem-919 RSFMenu-leaf-924 MuiMenuItem-gutters-975" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                            <div>
                                                                              Leaf
                                                                            </div>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-997" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-997" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-124 MuiDrawer-modal-135" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-124 MuiDrawer-modal-135" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-136 MuiDrawer-root-124 MuiDrawer-modal-135 MuiModal-hidden-137">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-138" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-126 RSFMenu-drawer-109 MuiDrawer-paperAnchorLeft-127" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-126 RSFMenu-drawer-109 MuiDrawer-paperAnchorLeft-127" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-140 MuiPaper-elevation16-158 MuiDrawer-paper-126 RSFMenu-drawer-109 MuiDrawer-paperAnchorLeft-127" style={{...}} role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-115" style={{...}}>
                                              <MenuList style={{...}} classes={{...}} disableListWrap={false}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-167 RSFMenu-list-110 MuiList-padding-168" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-171 RSFMenu-listItem-116 MuiMenuItem-gutters-172" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-171 RSFMenu-listItem-116 MuiMenuItem-gutters-172" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-174 MuiListItem-default-177 MuiListItem-gutters-182 MuiListItem-divider-181 MuiListItem-button-183 MuiMenuItem-root-171 RSFMenu-listItem-116 MuiMenuItem-gutters-172" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-176">
                                                                  <ButtonBase className="MuiListItem-root-174 MuiListItem-default-177 MuiListItem-gutters-182 MuiListItem-divider-181 MuiListItem-button-183 MuiMenuItem-root-171 RSFMenu-listItem-116 MuiMenuItem-gutters-172" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-176" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-186 MuiListItem-root-174 MuiListItem-default-177 MuiListItem-gutters-182 MuiListItem-divider-181 MuiListItem-button-183 MuiMenuItem-root-171 RSFMenu-listItem-116 MuiMenuItem-gutters-172" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-189">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-119">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-119" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-195 RSFMenu-listItemIcon-119">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-113">
                                                                              <ChevronRightIcon className="RSFMenu-icon-113">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-113">
                                                                                  <SvgIcon className="RSFMenu-icon-113" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-196 RSFMenu-icon-113" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-205" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-205" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-227 MuiDrawer-modal-238" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-227 MuiDrawer-modal-238" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-239 MuiDrawer-root-227 MuiDrawer-modal-238 MuiModal-hidden-240">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-241" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-229 RSFMenu-drawer-212 MuiDrawer-paperAnchorLeft-230" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-229 RSFMenu-drawer-212 MuiDrawer-paperAnchorLeft-230" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-243 MuiPaper-elevation16-261 MuiDrawer-paper-229 RSFMenu-drawer-212 MuiDrawer-paperAnchorLeft-230" style={{...}} role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-218" style={{...}}>
                                              <MenuList style={{...}} classes={{...}} disableListWrap={false}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-270 RSFMenu-list-213 MuiList-padding-271" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-274 RSFMenu-listItem-219 MuiMenuItem-gutters-275" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-274 RSFMenu-listItem-219 MuiMenuItem-gutters-275" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-277 MuiListItem-default-280 MuiListItem-gutters-285 MuiListItem-divider-284 MuiListItem-button-286 MuiMenuItem-root-274 RSFMenu-listItem-219 MuiMenuItem-gutters-275" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-279">
                                                                  <ButtonBase className="MuiListItem-root-277 MuiListItem-default-280 MuiListItem-gutters-285 MuiListItem-divider-284 MuiListItem-button-286 MuiMenuItem-root-274 RSFMenu-listItem-219 MuiMenuItem-gutters-275" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-279" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-289 MuiListItem-root-277 MuiListItem-default-280 MuiListItem-gutters-285 MuiListItem-divider-284 MuiListItem-button-286 MuiMenuItem-root-274 RSFMenu-listItem-219 MuiMenuItem-gutters-275" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-292">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-222">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-222" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-298 RSFMenu-listItemIcon-222">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-216">
                                                                              <ChevronRightIcon className="RSFMenu-icon-216">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-216">
                                                                                  <SvgIcon className="RSFMenu-icon-216" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-299 RSFMenu-icon-216" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-308" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-308" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-16 MuiDrawer-modal-27" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-16 MuiDrawer-modal-27" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-28 MuiDrawer-root-16 MuiDrawer-modal-27 MuiModal-hidden-29">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-30" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-32 MuiPaper-elevation16-50 MuiDrawer-paper-18 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-19" style={{...}} role="document" tabIndex="-1">
                                            <MenuList classes={{...}} disableListWrap={false}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-59 MuiList-padding-60 RSFMenu-list-2" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-78 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-81">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-87 RSFMenu-listItemIcon-11">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-88 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-102" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-102" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-97" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-99">
                                                              <div className="MuiCollapse-wrapperInner-100">
                                                                <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-59 RSFMenu-list-2 MuiList-padding-60" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                                    <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-78 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-81">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-87 RSFMenu-listItemIcon-11">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                                    <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-88 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-102" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-102" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-97" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-99">
                                                                                  <div className="MuiCollapse-wrapperInner-100">
                                                                                    <MenuList component="div" classes={{...}} disableListWrap={false}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-59 RSFMenu-list-2 MuiList-padding-60" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-101 RSFMenu-link-9" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-68">
                                                                                                                <ButtonBase className="MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-68" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-78 MuiListItem-root-66 MuiListItem-default-69 MuiListItem-gutters-74 MuiListItem-divider-73 MuiListItem-button-75 MuiMenuItem-root-63 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-64" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-81">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-102" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-102" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-572 MuiDrawer-modal-583" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-572 MuiDrawer-modal-583" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-584 MuiDrawer-root-572 MuiDrawer-modal-583 MuiModal-hidden-585">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-586" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={true} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-574 RSFMenu-drawer-557 MuiDrawer-paperAnchorLeft-575" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-574 RSFMenu-drawer-557 MuiDrawer-paperAnchorLeft-575" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-588 MuiPaper-elevation16-606 MuiDrawer-paper-574 RSFMenu-drawer-557 MuiDrawer-paperAnchorLeft-575" style={{...}} role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-563" style={{...}}>
                                              <MenuList style={{...}} classes={{...}} disableListWrap={false}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-615 RSFMenu-list-558 MuiList-padding-616" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624">
                                                                  <ButtonBase className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-634 MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-637">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-567">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-567" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-643 RSFMenu-listItemIcon-567">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-561">
                                                                              <ChevronRightIcon className="RSFMenu-icon-561">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-561">
                                                                                  <SvgIcon className="RSFMenu-icon-561" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-644 RSFMenu-icon-561" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-653" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-653" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                              <MenuList style={{...}} classes={{...}} disableListWrap={false}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-615 RSFMenu-list-558 MuiList-padding-616" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-619 MuiMenuItem-gutters-620" divider={true} onClick={[Function]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-619 MuiMenuItem-gutters-620" divider={true} onClick={[Function]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624">
                                                                  <ButtonBase className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-634 MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 MuiMenuItem-gutters-620" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function]}>
                                                                      <WithStyles(ListItemIcon) classes={{...}}>
                                                                        <ListItemIcon classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-643 RSFMenu-header-560">
                                                                            <pure(ChevronLeftIcon) className="RSFMenu-icon-561">
                                                                              <ChevronLeftIcon className="RSFMenu-icon-561">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-561">
                                                                                  <SvgIcon className="RSFMenu-icon-561" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-644 RSFMenu-icon-561" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronLeftIcon>
                                                                            </pure(ChevronLeftIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                        <ListItemText primary={{...}} theme={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                          <div className="MuiListItemText-root-637 RSFMenu-headerText-562">
                                                                            <WithStyles(Typography) variant="body1" className="MuiListItemText-primary-640" component="span">
                                                                              <Typography variant="body1" className="MuiListItemText-primary-640" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                                                <span className="MuiTypography-root-660 MuiTypography-body1-669 MuiListItemText-primary-640">
                                                                                  <div className="RSFMenu-headerText-562">
                                                                                    Group 1
                                                                                     
                                                                                  </div>
                                                                                </span>
                                                                              </Typography>
                                                                            </WithStyles(Typography)>
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-653" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-653" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624">
                                                                  <ButtonBase className="MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-624" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-634 MuiListItem-root-622 MuiListItem-default-625 MuiListItem-gutters-630 MuiListItem-divider-629 MuiListItem-button-631 MuiMenuItem-root-619 RSFMenu-listItem-564 MuiMenuItem-gutters-620" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                        <ListItemText primary="Item 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-637">
                                                                            Item 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-567">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-567" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-643 RSFMenu-listItemIcon-567">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-561">
                                                                              <ChevronRightIcon className="RSFMenu-icon-561">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-561">
                                                                                  <SvgIcon className="RSFMenu-icon-561" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-644 RSFMenu-icon-561" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-653" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-653" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-330 MuiDrawer-modal-341" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-330 MuiDrawer-modal-341" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-342 MuiDrawer-root-330 MuiDrawer-modal-341 MuiModal-hidden-343">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-344" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-332 RSFMenu-drawer-315 MuiDrawer-paperAnchorLeft-333" style={{...}} role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-332 RSFMenu-drawer-315 MuiDrawer-paperAnchorLeft-333" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-346 MuiPaper-elevation16-364 MuiDrawer-paper-332 RSFMenu-drawer-315 MuiDrawer-paperAnchorLeft-333" style={{...}} role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-321" style={{...}}>
                                              <MenuList style={{...}} classes={{...}} disableListWrap={false}>
                                                <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-373 RSFMenu-list-316 MuiList-padding-374" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-377 RSFMenu-listItem-322 MuiMenuItem-gutters-378" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-377 RSFMenu-listItem-322 MuiMenuItem-gutters-378" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-380 MuiListItem-default-383 MuiListItem-gutters-388 MuiListItem-divider-387 MuiListItem-button-389 MuiMenuItem-root-377 RSFMenu-listItem-322 MuiMenuItem-gutters-378" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-382">
                                                                  <ButtonBase className="MuiListItem-root-380 MuiListItem-default-383 MuiListItem-gutters-388 MuiListItem-divider-387 MuiListItem-button-389 MuiMenuItem-root-377 RSFMenu-listItem-322 MuiMenuItem-gutters-378" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-382" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-392 MuiListItem-root-380 MuiListItem-default-383 MuiListItem-gutters-388 MuiListItem-divider-387 MuiListItem-button-389 MuiMenuItem-root-377 RSFMenu-listItem-322 MuiMenuItem-gutters-378" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} theme={{...}} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-395">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-325">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-325" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-401 RSFMenu-listItemIcon-325">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-319">
                                                                              <ChevronRightIcon className="RSFMenu-icon-319">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-319">
                                                                                  <SvgIcon className="RSFMenu-icon-319" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-402 RSFMenu-icon-319" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-411" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-411" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
