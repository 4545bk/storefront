// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterButton passes drawerProps onto the underlying Filter 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-FilterButton-with-app) title="Filter By" model={{...}} drawerProps={{...}}>
        <inject-FilterButton-with-app title="Filter By" model={{...}} drawerProps={{...}} classes={{...}}>
          <FilterButton title="Filter By" model={{...}} drawerProps={{...}} classes={{...}} app={{...}} hideClearLink={false} clearLinkText="clear all">
            <WithStyles(ActionButton) label="Filter By" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
              <ActionButton label="Filter By" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
                <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                  <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                    <WithStyles(ButtonBase) className="MuiButton-root-421 MuiButton-contained-432 MuiButton-raised-435 RSFActionButton-raised-417" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-440" href={{...}} onClick={[Function]} component="button" type="button">
                      <ButtonBase className="MuiButton-root-421 MuiButton-contained-432 MuiButton-raised-435 RSFActionButton-raised-417" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-440" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                        <button className="MuiButtonBase-root-447 MuiButton-root-421 MuiButton-contained-432 MuiButton-raised-435 RSFActionButton-raised-417" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                          <span className="MuiButton-label-422 RSFActionButton-label-418">
                            <WithStyles(Typography) variant="button" className="RSFActionButton-caption-419">
                              <Typography variant="button" className="RSFActionButton-caption-419" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-450 MuiTypography-button-461 RSFActionButton-caption-419">
                                  Filter By
                                </span>
                              </Typography>
                            </WithStyles(Typography)>
                            <WithStyles(Typography) variant="caption" className="RSFActionButton-value-420">
                              <Typography variant="caption" className="RSFActionButton-value-420" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-450 MuiTypography-caption-460 RSFActionButton-value-420" />
                              </Typography>
                            </WithStyles(Typography)>
                          </span>
                          <NoSsr defer={false} fallback={{...}}>
                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                              <TouchRipple center={false} classes={{...}}>
                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-506" childFactory={[Function: childFactory]}>
                                  <span className="MuiTouchRipple-root-506" />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </ActionButton>
            </WithStyles(ActionButton)>
            <WithStyles(inject-Drawer) ModalProps={{...}} classes={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
              <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
                <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                    <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-492 MuiDrawer-modal-503" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-492 MuiDrawer-modal-503" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                          <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                            <Portal containerInfo={{...}}>
                              <div className="mui-fixed MuiModal-root-504 MuiDrawer-root-492 MuiDrawer-modal-503 MuiModal-hidden-505" amp-bind={{...}}>
                                <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                  <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                    <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                      <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                        <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                          <div className="MuiBackdrop-root-513" aria-hidden="true" style={{...}} onClick={[Function]} />
                                        </Transition>
                                      </Fade>
                                    </WithTheme(Fade)>
                                  </Backdrop>
                                </WithStyles(Backdrop)>
                                <RootRef rootRef={[Function]}>
                                  <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                      <EventListener target="window" onResize={[Function: debounced]}>
                                        <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                          <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-494 RSFDrawer-paper-489 RSFFilterButton-drawer-416 MuiDrawer-paperAnchorBottom-498" style={{...}} role="document" tabIndex="-1">
                                            <Paper elevation={16} square={true} className="MuiDrawer-paper-494 RSFDrawer-paper-489 RSFFilterButton-drawer-416 MuiDrawer-paperAnchorBottom-498" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                              <div className="MuiPaper-root-515 MuiPaper-elevation16-533 MuiDrawer-paper-494 RSFDrawer-paper-489 RSFFilterButton-drawer-416 MuiDrawer-paperAnchorBottom-498" style={{...}} role="document" tabIndex="-1">
                                                <div className="RSFDrawer-container-487">
                                                  <WithStyles(Typography) className="RSFDrawer-title-490" variant="h6" component="div">
                                                    <Typography className="RSFDrawer-title-490" variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-450 MuiTypography-h6-467 RSFDrawer-title-490">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-542" style={{...}}>
                                                                <div>
                                                                  Filter By
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                  <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-486" onClick={[Function]} style={{...}} on={{...}}>
                                                    <Button variant="fab" color="primary" className="RSFDrawer-closeButton-486" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                      <WithStyles(ButtonBase) className="MuiButton-root-421 MuiButton-fab-438 MuiButton-contained-432 MuiButton-containedPrimary-433 MuiButton-raised-435 MuiButton-raisedPrimary-436 RSFDrawer-closeButton-486" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-440" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                        <ButtonBase className="MuiButton-root-421 MuiButton-fab-438 MuiButton-contained-432 MuiButton-containedPrimary-433 MuiButton-raised-435 MuiButton-raisedPrimary-436 RSFDrawer-closeButton-486" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-440" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                          <button className="MuiButtonBase-root-447 MuiButton-root-421 MuiButton-fab-438 MuiButton-contained-432 MuiButton-containedPrimary-433 MuiButton-raised-435 MuiButton-raisedPrimary-436 RSFDrawer-closeButton-486" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                            <span className="MuiButton-label-422">
                                                              <pure(CloseIcon)>
                                                                <CloseIcon>
                                                                  <WithStyles(SvgIcon)>
                                                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                      <svg className="MuiSvgIcon-root-544" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                      </svg>
                                                                    </SvgIcon>
                                                                  </WithStyles(SvgIcon)>
                                                                </CloseIcon>
                                                              </pure(CloseIcon)>
                                                            </span>
                                                            <NoSsr defer={false} fallback={{...}}>
                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                <TouchRipple center={false} classes={{...}}>
                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-506" childFactory={[Function: childFactory]}>
                                                                    <span className="MuiTouchRipple-root-506" />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </NoSsr>
                                                          </button>
                                                        </ButtonBase>
                                                      </WithStyles(ButtonBase)>
                                                    </Button>
                                                  </WithStyles(Button)>
                                                  <div className="RSFDrawer-content-488" />
                                                </div>
                                              </div>
                                            </Paper>
                                          </WithStyles(Paper)>
                                        </Transition>
                                      </EventListener>
                                    </Slide>
                                  </WithTheme(Slide)>
                                </RootRef>
                              </div>
                            </Portal>
                          </Portal>
                        </Modal>
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </FilterButton>
        </inject-FilterButton-with-app>
      </WithStyles(inject-FilterButton-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`FilterButton renders with filters selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-FilterButton-with-app) model={{...}}>
        <inject-FilterButton-with-app model={{...}} classes={{...}}>
          <FilterButton model={{...}} classes={{...}} app={{...}} title="Filter" drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
            <WithStyles(ActionButton) label="Filter" href={{...}} value="2 selected" classes={{...}} onClick={[Function]}>
              <ActionButton label="Filter" href={{...}} value="2 selected" onClick={[Function]} classes={{...}}>
                <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                  <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                    <WithStyles(ButtonBase) className="MuiButton-root-145 MuiButton-contained-156 MuiButton-raised-159 RSFActionButton-raised-141" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-164" href={{...}} onClick={[Function]} component="button" type="button">
                      <ButtonBase className="MuiButton-root-145 MuiButton-contained-156 MuiButton-raised-159 RSFActionButton-raised-141" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-164" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                        <button className="MuiButtonBase-root-171 MuiButton-root-145 MuiButton-contained-156 MuiButton-raised-159 RSFActionButton-raised-141" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                          <span className="MuiButton-label-146 RSFActionButton-label-142">
                            <WithStyles(Typography) variant="button" className="RSFActionButton-caption-143">
                              <Typography variant="button" className="RSFActionButton-caption-143" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-174 MuiTypography-button-185 RSFActionButton-caption-143">
                                  Filter
                                </span>
                              </Typography>
                            </WithStyles(Typography)>
                            <WithStyles(Typography) variant="caption" className="RSFActionButton-value-144">
                              <Typography variant="caption" className="RSFActionButton-value-144" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-174 MuiTypography-caption-184 RSFActionButton-value-144">
                                  2 selected
                                </span>
                              </Typography>
                            </WithStyles(Typography)>
                          </span>
                          <NoSsr defer={false} fallback={{...}}>
                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                              <TouchRipple center={false} classes={{...}}>
                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-230" childFactory={[Function: childFactory]}>
                                  <span className="MuiTouchRipple-root-230" />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </ActionButton>
            </WithStyles(ActionButton)>
            <WithStyles(inject-Drawer) ModalProps={{...}} classes={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
              <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
                <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                    <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-216 MuiDrawer-modal-227" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-216 MuiDrawer-modal-227" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                          <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                            <Portal containerInfo={{...}}>
                              <div className="mui-fixed MuiModal-root-228 MuiDrawer-root-216 MuiDrawer-modal-227 MuiModal-hidden-229" amp-bind={{...}}>
                                <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                  <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                    <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                      <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                        <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                          <div className="MuiBackdrop-root-237" aria-hidden="true" style={{...}} onClick={[Function]} />
                                        </Transition>
                                      </Fade>
                                    </WithTheme(Fade)>
                                  </Backdrop>
                                </WithStyles(Backdrop)>
                                <RootRef rootRef={[Function]}>
                                  <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                      <EventListener target="window" onResize={[Function: debounced]}>
                                        <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                          <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-218 RSFDrawer-paper-213 RSFFilterButton-drawer-140 MuiDrawer-paperAnchorBottom-222" style={{...}} role="document" tabIndex="-1">
                                            <Paper elevation={16} square={true} className="MuiDrawer-paper-218 RSFDrawer-paper-213 RSFFilterButton-drawer-140 MuiDrawer-paperAnchorBottom-222" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                              <div className="MuiPaper-root-239 MuiPaper-elevation16-257 MuiDrawer-paper-218 RSFDrawer-paper-213 RSFFilterButton-drawer-140 MuiDrawer-paperAnchorBottom-222" style={{...}} role="document" tabIndex="-1">
                                                <div className="RSFDrawer-container-211">
                                                  <WithStyles(Typography) className="RSFDrawer-title-214" variant="h6" component="div">
                                                    <Typography className="RSFDrawer-title-214" variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-174 MuiTypography-h6-191 RSFDrawer-title-214">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-266" style={{...}}>
                                                                <div>
                                                                  Filter
                                                                </div>
                                                                <a className="RSFFilterButton-clear-139" onClick={[Function: res]}>
                                                                  clear all
                                                                </a>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                  <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-210" onClick={[Function]} style={{...}} on={{...}}>
                                                    <Button variant="fab" color="primary" className="RSFDrawer-closeButton-210" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                      <WithStyles(ButtonBase) className="MuiButton-root-145 MuiButton-fab-162 MuiButton-contained-156 MuiButton-containedPrimary-157 MuiButton-raised-159 MuiButton-raisedPrimary-160 RSFDrawer-closeButton-210" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-164" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                        <ButtonBase className="MuiButton-root-145 MuiButton-fab-162 MuiButton-contained-156 MuiButton-containedPrimary-157 MuiButton-raised-159 MuiButton-raisedPrimary-160 RSFDrawer-closeButton-210" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-164" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                          <button className="MuiButtonBase-root-171 MuiButton-root-145 MuiButton-fab-162 MuiButton-contained-156 MuiButton-containedPrimary-157 MuiButton-raised-159 MuiButton-raisedPrimary-160 RSFDrawer-closeButton-210" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                            <span className="MuiButton-label-146">
                                                              <pure(CloseIcon)>
                                                                <CloseIcon>
                                                                  <WithStyles(SvgIcon)>
                                                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                      <svg className="MuiSvgIcon-root-268" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                      </svg>
                                                                    </SvgIcon>
                                                                  </WithStyles(SvgIcon)>
                                                                </CloseIcon>
                                                              </pure(CloseIcon)>
                                                            </span>
                                                            <NoSsr defer={false} fallback={{...}}>
                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                <TouchRipple center={false} classes={{...}}>
                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-230" childFactory={[Function: childFactory]}>
                                                                    <span className="MuiTouchRipple-root-230" />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </NoSsr>
                                                          </button>
                                                        </ButtonBase>
                                                      </WithStyles(ButtonBase)>
                                                    </Button>
                                                  </WithStyles(Button)>
                                                  <div className="RSFDrawer-content-212" />
                                                </div>
                                              </div>
                                            </Paper>
                                          </WithStyles(Paper)>
                                        </Transition>
                                      </EventListener>
                                    </Slide>
                                  </WithTheme(Slide)>
                                </RootRef>
                              </div>
                            </Portal>
                          </Portal>
                        </Modal>
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </FilterButton>
        </inject-FilterButton-with-app>
      </WithStyles(inject-FilterButton-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`FilterButton renders with no filters selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-FilterButton-with-app) model={{...}}>
        <inject-FilterButton-with-app model={{...}} classes={{...}}>
          <FilterButton model={{...}} classes={{...}} app={{...}} title="Filter" drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
            <WithStyles(ActionButton) label="Filter" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
              <ActionButton label="Filter" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
                <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                  <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                    <WithStyles(ButtonBase) className="MuiButton-root-7 MuiButton-contained-18 MuiButton-raised-21 RSFActionButton-raised-3" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-26" href={{...}} onClick={[Function]} component="button" type="button">
                      <ButtonBase className="MuiButton-root-7 MuiButton-contained-18 MuiButton-raised-21 RSFActionButton-raised-3" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-26" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                        <button className="MuiButtonBase-root-33 MuiButton-root-7 MuiButton-contained-18 MuiButton-raised-21 RSFActionButton-raised-3" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                          <span className="MuiButton-label-8 RSFActionButton-label-4">
                            <WithStyles(Typography) variant="button" className="RSFActionButton-caption-5">
                              <Typography variant="button" className="RSFActionButton-caption-5" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-36 MuiTypography-button-47 RSFActionButton-caption-5">
                                  Filter
                                </span>
                              </Typography>
                            </WithStyles(Typography)>
                            <WithStyles(Typography) variant="caption" className="RSFActionButton-value-6">
                              <Typography variant="caption" className="RSFActionButton-value-6" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-36 MuiTypography-caption-46 RSFActionButton-value-6" />
                              </Typography>
                            </WithStyles(Typography)>
                          </span>
                          <NoSsr defer={false} fallback={{...}}>
                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                              <TouchRipple center={false} classes={{...}}>
                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-92" childFactory={[Function: childFactory]}>
                                  <span className="MuiTouchRipple-root-92" />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </ActionButton>
            </WithStyles(ActionButton)>
            <WithStyles(inject-Drawer) ModalProps={{...}} classes={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
              <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
                <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                    <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-78 MuiDrawer-modal-89" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-78 MuiDrawer-modal-89" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                          <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                            <Portal containerInfo={{...}}>
                              <div className="mui-fixed MuiModal-root-90 MuiDrawer-root-78 MuiDrawer-modal-89 MuiModal-hidden-91" amp-bind={{...}}>
                                <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                  <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                    <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                      <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                        <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                          <div className="MuiBackdrop-root-99" aria-hidden="true" style={{...}} onClick={[Function]} />
                                        </Transition>
                                      </Fade>
                                    </WithTheme(Fade)>
                                  </Backdrop>
                                </WithStyles(Backdrop)>
                                <RootRef rootRef={[Function]}>
                                  <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                      <EventListener target="window" onResize={[Function: debounced]}>
                                        <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                          <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-80 RSFDrawer-paper-75 RSFFilterButton-drawer-2 MuiDrawer-paperAnchorBottom-84" style={{...}} role="document" tabIndex="-1">
                                            <Paper elevation={16} square={true} className="MuiDrawer-paper-80 RSFDrawer-paper-75 RSFFilterButton-drawer-2 MuiDrawer-paperAnchorBottom-84" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                              <div className="MuiPaper-root-101 MuiPaper-elevation16-119 MuiDrawer-paper-80 RSFDrawer-paper-75 RSFFilterButton-drawer-2 MuiDrawer-paperAnchorBottom-84" style={{...}} role="document" tabIndex="-1">
                                                <div className="RSFDrawer-container-73">
                                                  <WithStyles(Typography) className="RSFDrawer-title-76" variant="h6" component="div">
                                                    <Typography className="RSFDrawer-title-76" variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-36 MuiTypography-h6-53 RSFDrawer-title-76">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-128" style={{...}}>
                                                                <div>
                                                                  Filter
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                  <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-72" onClick={[Function]} style={{...}} on={{...}}>
                                                    <Button variant="fab" color="primary" className="RSFDrawer-closeButton-72" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                      <WithStyles(ButtonBase) className="MuiButton-root-7 MuiButton-fab-24 MuiButton-contained-18 MuiButton-containedPrimary-19 MuiButton-raised-21 MuiButton-raisedPrimary-22 RSFDrawer-closeButton-72" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-26" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                        <ButtonBase className="MuiButton-root-7 MuiButton-fab-24 MuiButton-contained-18 MuiButton-containedPrimary-19 MuiButton-raised-21 MuiButton-raisedPrimary-22 RSFDrawer-closeButton-72" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-26" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                          <button className="MuiButtonBase-root-33 MuiButton-root-7 MuiButton-fab-24 MuiButton-contained-18 MuiButton-containedPrimary-19 MuiButton-raised-21 MuiButton-raisedPrimary-22 RSFDrawer-closeButton-72" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                            <span className="MuiButton-label-8">
                                                              <pure(CloseIcon)>
                                                                <CloseIcon>
                                                                  <WithStyles(SvgIcon)>
                                                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                      <svg className="MuiSvgIcon-root-130" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                      </svg>
                                                                    </SvgIcon>
                                                                  </WithStyles(SvgIcon)>
                                                                </CloseIcon>
                                                              </pure(CloseIcon)>
                                                            </span>
                                                            <NoSsr defer={false} fallback={{...}}>
                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                <TouchRipple center={false} classes={{...}}>
                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-92" childFactory={[Function: childFactory]}>
                                                                    <span className="MuiTouchRipple-root-92" />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </NoSsr>
                                                          </button>
                                                        </ButtonBase>
                                                      </WithStyles(ButtonBase)>
                                                    </Button>
                                                  </WithStyles(Button)>
                                                  <div className="RSFDrawer-content-74" />
                                                </div>
                                              </div>
                                            </Paper>
                                          </WithStyles(Paper)>
                                        </Transition>
                                      </EventListener>
                                    </Slide>
                                  </WithTheme(Slide)>
                                </RootRef>
                              </div>
                            </Portal>
                          </Portal>
                        </Modal>
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </FilterButton>
        </inject-FilterButton-with-app>
      </WithStyles(inject-FilterButton-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`FilterButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-FilterButton-with-app) title="Filter By" model={{...}}>
        <inject-FilterButton-with-app title="Filter By" model={{...}} classes={{...}}>
          <FilterButton title="Filter By" model={{...}} classes={{...}} app={{...}} drawerProps={{...}} hideClearLink={false} clearLinkText="clear all">
            <WithStyles(ActionButton) label="Filter By" href={{...}} value={{...}} classes={{...}} onClick={[Function]}>
              <ActionButton label="Filter By" href={{...}} value={{...}} onClick={[Function]} classes={{...}}>
                <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                  <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                    <WithStyles(ButtonBase) className="MuiButton-root-283 MuiButton-contained-294 MuiButton-raised-297 RSFActionButton-raised-279" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-302" href={{...}} onClick={[Function]} component="button" type="button">
                      <ButtonBase className="MuiButton-root-283 MuiButton-contained-294 MuiButton-raised-297 RSFActionButton-raised-279" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-302" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                        <button className="MuiButtonBase-root-309 MuiButton-root-283 MuiButton-contained-294 MuiButton-raised-297 RSFActionButton-raised-279" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                          <span className="MuiButton-label-284 RSFActionButton-label-280">
                            <WithStyles(Typography) variant="button" className="RSFActionButton-caption-281">
                              <Typography variant="button" className="RSFActionButton-caption-281" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-312 MuiTypography-button-323 RSFActionButton-caption-281">
                                  Filter By
                                </span>
                              </Typography>
                            </WithStyles(Typography)>
                            <WithStyles(Typography) variant="caption" className="RSFActionButton-value-282">
                              <Typography variant="caption" className="RSFActionButton-value-282" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                <span className="MuiTypography-root-312 MuiTypography-caption-322 RSFActionButton-value-282" />
                              </Typography>
                            </WithStyles(Typography)>
                          </span>
                          <NoSsr defer={false} fallback={{...}}>
                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                              <TouchRipple center={false} classes={{...}}>
                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-368" childFactory={[Function: childFactory]}>
                                  <span className="MuiTouchRipple-root-368" />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </ActionButton>
            </WithStyles(ActionButton)>
            <WithStyles(inject-Drawer) ModalProps={{...}} classes={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]}>
              <inject-Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}}>
                <Drawer ModalProps={{...}} anchor="bottom" title={{...}} open={false} onRequestClose={[Function: bound ]} classes={{...}} amp={false} ampStateId={[undefined]} showCloseButton={true} autoAdjustBodyPadding={false} closeButtonProps={{...}}>
                  <WithStyles(Drawer) anchor="bottom" classes={{...}} amp-bind={{...}} open={false} variant={[undefined]} ModalProps={{...}}>
                    <Drawer anchor="bottom" amp-bind={{...}} open={false} variant="temporary" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                      <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-354 MuiDrawer-modal-365" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true}>
                        <Modal BackdropProps={{...}} className="MuiDrawer-root-354 MuiDrawer-modal-365" open={false} onClose={[undefined]} amp-bind={{...}} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                          <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                            <Portal containerInfo={{...}}>
                              <div className="mui-fixed MuiModal-root-366 MuiDrawer-root-354 MuiDrawer-modal-365 MuiModal-hidden-367" amp-bind={{...}}>
                                <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                                  <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                    <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                      <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                        <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                          <div className="MuiBackdrop-root-375" aria-hidden="true" style={{...}} onClick={[Function]} />
                                        </Transition>
                                      </Fade>
                                    </WithTheme(Fade)>
                                  </Backdrop>
                                </WithStyles(Backdrop)>
                                <RootRef rootRef={[Function]}>
                                  <WithTheme(Slide) in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <Slide theme={{...}} in={false} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                      <EventListener target="window" onResize={[Function: debounced]}>
                                        <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                          <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-356 RSFDrawer-paper-351 RSFFilterButton-drawer-278 MuiDrawer-paperAnchorBottom-360" style={{...}} role="document" tabIndex="-1">
                                            <Paper elevation={16} square={true} className="MuiDrawer-paper-356 RSFDrawer-paper-351 RSFFilterButton-drawer-278 MuiDrawer-paperAnchorBottom-360" style={{...}} role="document" tabIndex="-1" classes={{...}} component="div">
                                              <div className="MuiPaper-root-377 MuiPaper-elevation16-395 MuiDrawer-paper-356 RSFDrawer-paper-351 RSFFilterButton-drawer-278 MuiDrawer-paperAnchorBottom-360" style={{...}} role="document" tabIndex="-1">
                                                <div className="RSFDrawer-container-349">
                                                  <WithStyles(Typography) className="RSFDrawer-title-352" variant="h6" component="div">
                                                    <Typography className="RSFDrawer-title-352" variant="h6" component="div" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} inline={false} noWrap={false} paragraph={false}>
                                                      <div className="MuiTypography-root-312 MuiTypography-h6-329 RSFDrawer-title-352">
                                                        <Hbox justifyContent="center">
                                                          <WithStyles(Box) alignItems="center" justifyContent="center" flexDirection="row">
                                                            <Box alignItems="center" justifyContent="center" flexDirection="row" classes={{...}}>
                                                              <div className="RSFBox-root-404" style={{...}}>
                                                                <div>
                                                                  Filter By
                                                                </div>
                                                              </div>
                                                            </Box>
                                                          </WithStyles(Box)>
                                                        </Hbox>
                                                      </div>
                                                    </Typography>
                                                  </WithStyles(Typography)>
                                                  <WithStyles(Button) variant="fab" color="primary" className="RSFDrawer-closeButton-348" onClick={[Function]} style={{...}} on={{...}}>
                                                    <Button variant="fab" color="primary" className="RSFDrawer-closeButton-348" onClick={[Function]} style={{...}} on={{...}} classes={{...}} component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                                                      <WithStyles(ButtonBase) className="MuiButton-root-283 MuiButton-fab-300 MuiButton-contained-294 MuiButton-containedPrimary-295 MuiButton-raised-297 MuiButton-raisedPrimary-298 RSFDrawer-closeButton-348" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-302" onClick={[Function]} style={{...}} on={{...}} component="button" type="button">
                                                        <ButtonBase className="MuiButton-root-283 MuiButton-fab-300 MuiButton-contained-294 MuiButton-containedPrimary-295 MuiButton-raised-297 MuiButton-raisedPrimary-298 RSFDrawer-closeButton-348" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-302" onClick={[Function]} style={{...}} on={{...}} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                                                          <button className="MuiButtonBase-root-309 MuiButton-root-283 MuiButton-fab-300 MuiButton-contained-294 MuiButton-containedPrimary-295 MuiButton-raised-297 MuiButton-raisedPrimary-298 RSFDrawer-closeButton-348" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} onContextMenu={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function]} style={{...}} on={{...}}>
                                                            <span className="MuiButton-label-284">
                                                              <pure(CloseIcon)>
                                                                <CloseIcon>
                                                                  <WithStyles(SvgIcon)>
                                                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                      <svg className="MuiSvgIcon-root-406" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                      </svg>
                                                                    </SvgIcon>
                                                                  </WithStyles(SvgIcon)>
                                                                </CloseIcon>
                                                              </pure(CloseIcon)>
                                                            </span>
                                                            <NoSsr defer={false} fallback={{...}}>
                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                <TouchRipple center={false} classes={{...}}>
                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-368" childFactory={[Function: childFactory]}>
                                                                    <span className="MuiTouchRipple-root-368" />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </NoSsr>
                                                          </button>
                                                        </ButtonBase>
                                                      </WithStyles(ButtonBase)>
                                                    </Button>
                                                  </WithStyles(Button)>
                                                  <div className="RSFDrawer-content-350" />
                                                </div>
                                              </div>
                                            </Paper>
                                          </WithStyles(Paper)>
                                        </Transition>
                                      </EventListener>
                                    </Slide>
                                  </WithTheme(Slide)>
                                </RootRef>
                              </div>
                            </Portal>
                          </Portal>
                        </Modal>
                      </WithStyles(Modal)>
                    </Drawer>
                  </WithStyles(Drawer)>
                </Drawer>
              </inject-Drawer>
            </WithStyles(inject-Drawer)>
          </FilterButton>
        </inject-FilterButton-with-app>
      </WithStyles(inject-FilterButton-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
