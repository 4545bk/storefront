// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonSelector should allow you to set a custom angle for the strikethrough 1`] = `
<Provider app={{...}}>
  <inject-WithStyles(ButtonSelector) model={{...}} strikeThroughAngle={35} strikeThroughDisabled={true}>
    <WithStyles(ButtonSelector) model={{...}} strikeThroughAngle={35} strikeThroughDisabled={true} amp={false} ampStateId={[undefined]}>
      <ButtonSelector classes={{...}} model={{...}} strikeThroughAngle={35} strikeThroughDisabled={true} amp={false} ampStateId={[undefined]} items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false}>
        <div className={[undefined]}>
          <div className="RSFButtonSelector-buttons-1">
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3" amp-bind="class=>undefined.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={true} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":true,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={true} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":true,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11 MuiButton-disabled-21 RSFButtonSelector-disabled-8" disabled={true} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":true,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11 MuiButton-disabled-21 RSFButtonSelector-disabled-8" disabled={true} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":true,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="-1" className="MuiButtonBase-root-27 MuiButtonBase-disabled-28 MuiButton-root-11 MuiButton-disabled-21 RSFButtonSelector-disabled-8" type="button" disabled={true} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":true,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})">
                        <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                          <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                            <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                              <Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                  <img src="http://via.placeholder.com/128x128/ffffff" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </span>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
              <div className="RSFButtonSelector-strikeThrough-10" style={{...}} />
            </div>
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" amp-bind="class=>undefined.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})">
                        <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                          <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                            <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                              <Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                  <img src="http://via.placeholder.com/128x128/000000" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
          </div>
        </div>
      </ButtonSelector>
    </WithStyles(ButtonSelector)>
  </inject-WithStyles(ButtonSelector)>
</Provider>
`;

exports[`ButtonSelector should render buttons with images 1`] = `
<Provider app={{...}}>
  <inject-WithStyles(ButtonSelector) model={{...}}>
    <WithStyles(ButtonSelector) model={{...}} amp={false} ampStateId={[undefined]}>
      <ButtonSelector classes={{...}} model={{...}} amp={false} ampStateId={[undefined]} items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false} strikeThroughDisabled={false} strikeThroughAngle={45}>
        <div className={[undefined]}>
          <div className="RSFButtonSelector-buttons-1">
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3" amp-bind="class=>undefined.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})">
                        <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                          <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                            <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                              <Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                  <img src="http://via.placeholder.com/128x128/ffffff" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" amp-bind="class=>undefined.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})">
                        <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                          <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                            <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                              <Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                  <img src="http://via.placeholder.com/128x128/000000" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
          </div>
        </div>
      </ButtonSelector>
    </WithStyles(ButtonSelector)>
  </inject-WithStyles(ButtonSelector)>
</Provider>
`;

exports[`ButtonSelector should render buttons with text 1`] = `
<Provider app={{...}}>
  <inject-WithStyles(ButtonSelector) model={{...}}>
    <WithStyles(ButtonSelector) model={{...}} amp={false} ampStateId={[undefined]}>
      <ButtonSelector classes={{...}} model={{...}} amp={false} ampStateId={[undefined]} items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false} strikeThroughDisabled={false} strikeThroughAngle={45}>
        <div className={[undefined]}>
          <div className="RSFButtonSelector-buttons-1">
            <div className="RSFButtonSelector-button-2" amp-bind="class=>undefined.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          One
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-selected-5" amp-bind="class=>undefined.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          Two
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
            <div className="RSFButtonSelector-button-2" amp-bind="class=>undefined.undefined.selected.id=="3" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          Three
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
          </div>
        </div>
      </ButtonSelector>
    </WithStyles(ButtonSelector)>
  </inject-WithStyles(ButtonSelector)>
</Provider>
`;

exports[`ButtonSelector should render css color codes 1`] = `
<Provider app={{...}}>
  <inject-AmpState>
    <AmpState amp={false} initialState={{...}} id="moovAmpState">
      <Provider ampStateId="moovAmpState">
        <inject-WithStyles(ButtonSelector) model={{...}}>
          <WithStyles(ButtonSelector) model={{...}} amp={false} ampStateId="moovAmpState">
            <ButtonSelector classes={{...}} model={{...}} amp={false} ampStateId="moovAmpState" items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false} strikeThroughDisabled={false} strikeThroughAngle={45}>
              <div className={[undefined]}>
                <div className="RSFButtonSelector-buttons-1">
                  <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3" amp-bind="class=>moovAmpState.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":null,"color":"#ffffff","price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":null,"color":"#ffffff","price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":null,"color":"#ffffff","price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":null,"color":"#ffffff","price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":null,"color":"#ffffff","price":null} }}})">
                              <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                                <div className="RSFButtonSelector-image-7" style={{...}} />
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                  <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" amp-bind="class=>moovAmpState.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":null,"color":"rgb(255, 0, 0)","price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":null,"color":"rgb(255, 0, 0)","price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":null,"color":"rgb(255, 0, 0)","price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":null,"color":"rgb(255, 0, 0)","price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":null,"color":"rgb(255, 0, 0)","price":null} }}})">
                              <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                                <div className="RSFButtonSelector-image-7" style={{...}} />
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                </div>
              </div>
            </ButtonSelector>
          </WithStyles(ButtonSelector)>
        </inject-WithStyles(ButtonSelector)>
      </Provider>
    </AmpState>
  </inject-AmpState>
</Provider>
`;

exports[`ButtonSelector should render links for options with urls 1`] = `
<Provider app={{...}}>
  <inject-AmpState>
    <AmpState amp={false} initialState={{...}} id="moovAmpState">
      <Provider ampStateId="moovAmpState">
        <inject-WithStyles(ButtonSelector) model={{...}}>
          <WithStyles(ButtonSelector) model={{...}} amp={false} ampStateId="moovAmpState">
            <ButtonSelector classes={{...}} model={{...}} amp={false} ampStateId="moovAmpState" items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false} strikeThroughDisabled={false} strikeThroughAngle={45}>
              <div className={[undefined]}>
                <div className="RSFButtonSelector-buttons-1">
                  <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3" amp-bind="class=>moovAmpState.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/ffffff","color":null,"price":null} }}})">
                              <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                                <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                                  <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true}>
                                    <Image classes={{...}} src="http://via.placeholder.com/128x128/ffffff" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                      <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                        <img src="http://via.placeholder.com/128x128/ffffff" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                      </div>
                                    </Image>
                                  </inject-Image>
                                </WithStyles(inject-Image)>
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                  <div className="RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" amp-bind="class=>moovAmpState.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3 RSFButtonSelector-selectedImage-4" : "RSFButtonSelector-button-2 RSFButtonSelector-buttonWithImage-3"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":null,"disabled":false,"image":"http://via.placeholder.com/128x128/000000","color":null,"price":null} }}})">
                              <span className="MuiButton-label-12 RSFButtonSelector-imageLabel-6">
                                <WithStyles(inject-Image) src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                                  <inject-Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true}>
                                    <Image classes={{...}} src="http://via.placeholder.com/128x128/000000" className="RSFButtonSelector-image-7" fill={true} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100}>
                                      <div className="RSFButtonSelector-image-7 RSFImage-root-37 RSFImage-fill-40">
                                        <img src="http://via.placeholder.com/128x128/000000" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} />
                                      </div>
                                    </Image>
                                  </inject-Image>
                                </WithStyles(inject-Image)>
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                </div>
              </div>
            </ButtonSelector>
          </WithStyles(ButtonSelector)>
        </inject-WithStyles(ButtonSelector)>
      </Provider>
    </AmpState>
  </inject-AmpState>
</Provider>
`;

exports[`ButtonSelector should show the text of the selected option 1`] = `
<Provider app={{...}}>
  <inject-WithStyles(ButtonSelector) model={{...}} showSelectedText={true}>
    <WithStyles(ButtonSelector) model={{...}} showSelectedText={true} amp={false} ampStateId={[undefined]}>
      <ButtonSelector classes={{...}} model={{...}} showSelectedText={true} amp={false} ampStateId={[undefined]} items={{...}} buttonProps={{...}} imageProps={{...}} strikeThroughDisabled={false} strikeThroughAngle={45}>
        <div className={[undefined]}>
          <div className="RSFButtonSelector-buttons-1">
            <div className="RSFButtonSelector-button-2" amp-bind="class=>undefined.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          One
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
            <div className="RSFButtonSelector-button-2 RSFButtonSelector-selected-5" amp-bind="class=>undefined.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          Two
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
            <div className="RSFButtonSelector-button-2" amp-bind="class=>undefined.undefined.selected.id=="3" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
              <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                  <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                    <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                      <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ undefined: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})">
                        <span className="MuiButton-label-12">
                          Three
                        </span>
                        <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                          <TouchRipple classes={{...}} center={false}>
                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                              <span className="MuiTouchRipple-root-30" />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </div>
          </div>
          <WithStyles(Typography) variant="caption" component="div" className="RSFButtonSelector-selectedName-9" amp-bind="text=>undefined.undefined.selected.text">
            <Typography classes={{...}} variant="caption" component="div" className="RSFButtonSelector-selectedName-9" amp-bind="text=>undefined.undefined.selected.text" align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
              <div className="MuiTypography-root-41 MuiTypography-caption-51 RSFButtonSelector-selectedName-9" amp-bind="text=>undefined.undefined.selected.text">
                Two
              </div>
            </Typography>
          </WithStyles(Typography)>
        </div>
      </ButtonSelector>
    </WithStyles(ButtonSelector)>
  </inject-WithStyles(ButtonSelector)>
</Provider>
`;

exports[`ButtonSelector should support amp 1`] = `
<Provider app={{...}}>
  <inject-AmpState>
    <AmpState amp={true} initialState={{...}} id="moovAmpState">
      <Provider ampStateId="moovAmpState">
        <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
          <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
            <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
          </SideEffect(NullComponent)>
        </HelmetWrapper>
        <amp-state id="moovAmpState">
          <script type="application/json" dangerouslySetInnerHTML={{...}} />
        </amp-state>
        <inject-WithStyles(ButtonSelector) model={{...}}>
          <WithStyles(ButtonSelector) model={{...}} amp={true} ampStateId="moovAmpState">
            <ButtonSelector classes={{...}} model={{...}} amp={true} ampStateId="moovAmpState" items={{...}} buttonProps={{...}} imageProps={{...}} showSelectedText={false} strikeThroughDisabled={false} strikeThroughAngle={45}>
              <div className={[undefined]}>
                <input type="hidden" name={[undefined]} value="2" amp-bind="value=>moovAmpState.undefined.selected.id" />
                <div className="RSFButtonSelector-buttons-1">
                  <div className="RSFButtonSelector-button-2" amp-bind="class=>moovAmpState.undefined.selected.id=="1" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"1","text":"One","disabled":false,"image":null,"color":null,"price":null} }}})">
                              <span className="MuiButton-label-12">
                                One
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                  <div className="RSFButtonSelector-button-2 RSFButtonSelector-selected-5" amp-bind="class=>moovAmpState.undefined.selected.id=="2" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"2","text":"Two","disabled":false,"image":null,"color":null,"price":null} }}})">
                              <span className="MuiButton-label-12">
                                Two
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                  <div className="RSFButtonSelector-button-2" amp-bind="class=>moovAmpState.undefined.selected.id=="3" ? "RSFButtonSelector-button-2 RSFButtonSelector-selected-5" : "RSFButtonSelector-button-2"">
                    <WithStyles(Button) onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" classes={{...}}>
                      <Button classes={{...}} onClick={[Function: onClick]} href={[undefined]} disabled={false} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" color="default" disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
                        <WithStyles(ButtonBase) className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button">
                          <ButtonBase classes={{...}} className="MuiButton-root-11" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-20" onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
                            <button onBlur={[Function: handleEvent]} onFocus={[Function: value]} onKeyDown={[Function: value]} onKeyUp={[Function: value]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-27 MuiButton-root-11" type="button" disabled={false} onClick={[Function: onClick]} href={[undefined]} on="tap:AMP.setState({ moovAmpState: { undefined: { selected: {"id":"3","text":"Three","disabled":false,"image":null,"color":null,"price":null} }}})">
                              <span className="MuiButton-label-12">
                                Three
                              </span>
                              <WithStyles(TouchRipple) innerRef={[Function: value]} center={false}>
                                <TouchRipple classes={{...}} center={false}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-30" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-30" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </div>
                </div>
              </div>
            </ButtonSelector>
          </WithStyles(ButtonSelector)>
        </inject-WithStyles(ButtonSelector)>
      </Provider>
    </AmpState>
  </inject-AmpState>
</Provider>
`;
