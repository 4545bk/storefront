// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SortButton passes drawerProps to the underlying Sort component 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}} drawerProps={{...}}>
        <SortButton title="Sort By" model={{...}} drawerProps={{...}} app={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-242 MuiButton-contained-253 MuiButton-raised-256 RSFActionButton-raised-238" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-261" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-242 MuiButton-contained-253 MuiButton-raised-256 RSFActionButton-raised-238" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-261" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-268 MuiButton-root-242 MuiButton-contained-253 MuiButton-raised-256 RSFActionButton-raised-238" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-243 RSFActionButton-label-239">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-240">
                            <Typography variant="button" className="RSFActionButton-caption-240" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-271 MuiTypography-button-282 RSFActionButton-caption-240">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-241">
                            <Typography variant="caption" className="RSFActionButton-value-241" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-271 MuiTypography-caption-281 RSFActionButton-value-241">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-306" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-306" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
          <Hidden xsDown={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                <HiddenJs width="md" xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                  <WithStyles(Menu) open={false} anchorEl={{...}} onClose={[Function]}>
                    <Menu open={false} anchorEl={{...}} onClose={[Function]} theme={{...}} classes={{...}} disableAutoFocusItem={false} transitionDuration="auto">
                      <WithStyles(Popover) getContentAnchorEl={[Function]} classes={[undefined]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto">
                        <Popover getContentAnchorEl={[Function]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto" classes={{...}} anchorReference="anchorEl" elevation={8} marginThreshold={16} TransitionComponent={[Function: WithTheme]}>
                          <WithStyles(Modal) classes={[undefined]} container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]}>
                            <Modal container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                          </WithStyles(Modal)>
                        </Popover>
                      </WithStyles(Popover)>
                    </Menu>
                  </WithStyles(Menu)>
                </HiddenJs>
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with a sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-84 MuiButton-contained-95 MuiButton-raised-98 RSFActionButton-raised-80" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-103" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-84 MuiButton-contained-95 MuiButton-raised-98 RSFActionButton-raised-80" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-103" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-110 MuiButton-root-84 MuiButton-contained-95 MuiButton-raised-98 RSFActionButton-raised-80" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-85 RSFActionButton-label-81">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-82">
                            <Typography variant="button" className="RSFActionButton-caption-82" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-113 MuiTypography-button-124 RSFActionButton-caption-82">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-83">
                            <Typography variant="caption" className="RSFActionButton-value-83" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-113 MuiTypography-caption-123 RSFActionButton-value-83">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-148" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-148" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
          <Hidden xsDown={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                <HiddenJs width="md" xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                  <WithStyles(Menu) open={false} anchorEl={{...}} onClose={[Function]}>
                    <Menu open={false} anchorEl={{...}} onClose={[Function]} theme={{...}} classes={{...}} disableAutoFocusItem={false} transitionDuration="auto">
                      <WithStyles(Popover) getContentAnchorEl={[Function]} classes={[undefined]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto">
                        <Popover getContentAnchorEl={[Function]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto" classes={{...}} anchorReference="anchorEl" elevation={8} marginThreshold={16} TransitionComponent={[Function: WithTheme]}>
                          <WithStyles(Modal) classes={[undefined]} container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]}>
                            <Modal container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                          </WithStyles(Modal)>
                        </Popover>
                      </WithStyles(Popover)>
                    </Menu>
                  </WithStyles(Menu)>
                </HiddenJs>
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`SortButton renders with no sort selected 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <inject-SortButton-with-app model={{...}}>
        <SortButton model={{...}} app={{...}} title="Sort" drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort" value={[undefined]} onClick={[Function]}>
            <ActionButton href={{...}} label="Sort" value={[undefined]} onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-24" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-31 MuiButton-root-5 MuiButton-contained-16 MuiButton-raised-19 RSFActionButton-raised-1" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-6 RSFActionButton-label-2">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-3">
                            <Typography variant="button" className="RSFActionButton-caption-3" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-button-45 RSFActionButton-caption-3">
                                Sort
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-4">
                            <Typography variant="caption" className="RSFActionButton-value-4" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-34 MuiTypography-caption-44 RSFActionButton-value-4" />
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-69" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-69" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
          <Hidden xsDown={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                <HiddenJs width="md" xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                  <WithStyles(Menu) open={false} anchorEl={{...}} onClose={[Function]}>
                    <Menu open={false} anchorEl={{...}} onClose={[Function]} theme={{...}} classes={{...}} disableAutoFocusItem={false} transitionDuration="auto">
                      <WithStyles(Popover) getContentAnchorEl={[Function]} classes={[undefined]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto">
                        <Popover getContentAnchorEl={[Function]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto" classes={{...}} anchorReference="anchorEl" elevation={8} marginThreshold={16} TransitionComponent={[Function: WithTheme]}>
                          <WithStyles(Modal) classes={[undefined]} container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]}>
                            <Modal container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                          </WithStyles(Modal)>
                        </Popover>
                      </WithStyles(Popover)>
                    </Menu>
                  </WithStyles(Menu)>
                </HiddenJs>
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;

exports[`SortButton uses the title prop as the label and drawer header 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProvider theme={{...}}>
      <inject-SortButton-with-app title="Sort By" model={{...}}>
        <SortButton title="Sort By" model={{...}} app={{...}} drawerProps={{...}}>
          <WithStyles(ActionButton) href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]}>
            <ActionButton href={{...}} label="Sort By" value="Price - Low to High" onClick={[Function]} classes={{...}}>
              <WithStyles(Button) variant="contained" classes={{...}} href={{...}} onClick={[Function]}>
                <Button variant="contained" href={{...}} onClick={[Function]} classes={{...}} color="default" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button">
                  <WithStyles(ButtonBase) className="MuiButton-root-163 MuiButton-contained-174 MuiButton-raised-177 RSFActionButton-raised-159" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-182" href={{...}} onClick={[Function]} component="button" type="button">
                    <ButtonBase className="MuiButton-root-163 MuiButton-contained-174 MuiButton-raised-177 RSFActionButton-raised-159" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-182" href={{...}} onClick={[Function]} component="button" type="button" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} tabIndex="0">
                      <button className="MuiButtonBase-root-189 MuiButton-root-163 MuiButton-contained-174 MuiButton-raised-177 RSFActionButton-raised-159" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} href={{...}} onClick={[Function]}>
                        <span className="MuiButton-label-164 RSFActionButton-label-160">
                          <WithStyles(Typography) variant="button" className="RSFActionButton-caption-161">
                            <Typography variant="button" className="RSFActionButton-caption-161" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-192 MuiTypography-button-203 RSFActionButton-caption-161">
                                Sort By
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                          <WithStyles(Typography) variant="caption" className="RSFActionButton-value-162">
                            <Typography variant="caption" className="RSFActionButton-value-162" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                              <span className="MuiTypography-root-192 MuiTypography-caption-202 RSFActionButton-value-162">
                                Price - Low to High
                              </span>
                            </Typography>
                          </WithStyles(Typography)>
                        </span>
                        <NoSsr defer={false} fallback={{...}}>
                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                            <TouchRipple center={false} classes={{...}}>
                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-227" childFactory={[Function: childFactory]}>
                                <span className="MuiTouchRipple-root-227" />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </ActionButton>
          </WithStyles(ActionButton)>
          <Hidden smUp={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false}>
                <HiddenJs width="md" smUp={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} xlDown={false} xlUp={false} xsDown={false} xsUp={false} />
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
          <Hidden xsDown={true} implementation="js" lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
            <WithTheme(WithWidth(HiddenJs)) xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
              <WithWidth(HiddenJs) theme={{...}} xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                <HiddenJs width="md" xsDown={true} lgDown={false} lgUp={false} mdDown={false} mdUp={false} smDown={false} smUp={false} xlDown={false} xlUp={false} xsUp={false}>
                  <WithStyles(Menu) open={false} anchorEl={{...}} onClose={[Function]}>
                    <Menu open={false} anchorEl={{...}} onClose={[Function]} theme={{...}} classes={{...}} disableAutoFocusItem={false} transitionDuration="auto">
                      <WithStyles(Popover) getContentAnchorEl={[Function]} classes={[undefined]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto">
                        <Popover getContentAnchorEl={[Function]} onEntering={[Function]} anchorOrigin={{...}} transformOrigin={{...}} PaperProps={{...}} open={false} anchorEl={{...}} onClose={[Function]} transitionDuration="auto" classes={{...}} anchorReference="anchorEl" elevation={8} marginThreshold={16} TransitionComponent={[Function: WithTheme]}>
                          <WithStyles(Modal) classes={[undefined]} container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]}>
                            <Modal container={[undefined]} open={false} BackdropProps={{...}} onClose={[Function]} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} />
                          </WithStyles(Modal)>
                        </Popover>
                      </WithStyles(Popover)>
                    </Menu>
                  </WithStyles(Menu)>
                </HiddenJs>
                <EventListener target="window" onResize={[Function: debounced]} />
              </WithWidth(HiddenJs)>
            </WithTheme(WithWidth(HiddenJs))>
          </Hidden>
        </SortButton>
      </inject-SortButton-with-app>
    </MuiThemeProvider>
  </Provider>
</TestProvider>
`;
